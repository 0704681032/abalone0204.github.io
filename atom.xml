<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>De-bug</title>
  <subtitle>{ web, computer, data }</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://abalone0204.github.com/"/>
  <updated>2016-04-24T17:01:39.030Z</updated>
  <id>http://abalone0204.github.com/</id>
  
  <author>
    <name>Tsung-Chen Ku</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Travis CI + github page</title>
    <link href="http://abalone0204.github.com/2016/04/24/simple-ci/"/>
    <id>http://abalone0204.github.com/2016/04/24/simple-ci/</id>
    <published>2016-04-24T21:48:35.000Z</published>
    <updated>2016-04-24T17:01:39.030Z</updated>
    
    <content type="html">&lt;p&gt;這週把原本自幹的靜態部落格轉到 hexo 去，&lt;/p&gt;
&lt;p&gt;想說辛苦都辛苦了，來整個 CI 也不錯。&lt;/p&gt;
&lt;p&gt;這篇主要紀錄一下如何用 Travis-CI + hexo 在 github page 上發布部落格&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Prerequisite&quot;&gt;&lt;a href=&quot;#Prerequisite&quot; class=&quot;headerlink&quot; title=&quot;Prerequisite&quot;&gt;&lt;/a&gt;Prerequisite&lt;/h1&gt;&lt;p&gt;這裡會拿 &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo&lt;/a&gt; 來當例子。&lt;/p&gt;
&lt;p&gt;因為 hexo 也有自己的 deploy 工具，&lt;/p&gt;
&lt;p&gt;估計這種生成靜態頁面的 framework ，&lt;/p&gt;
&lt;p&gt;都能相當容易的跟 travis CI 以及 github page 整合起來。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;唯一要注意的是這裡的 repository 必須是公開的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Issues&quot;&gt;&lt;a href=&quot;#Issues&quot; class=&quot;headerlink&quot; title=&quot;Issues&quot;&gt;&lt;/a&gt;Issues&lt;/h1&gt;&lt;p&gt;會有兩個主要問題需要解決：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;themes 是用 submodule 更新的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我們會對 github 上的 repository 有寫入，考量到安全性，我們必須妥善處理 deploy key&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;Setup&quot;&gt;&lt;a href=&quot;#Setup&quot; class=&quot;headerlink&quot; title=&quot;Setup&quot;&gt;&lt;/a&gt;Setup&lt;/h1&gt;&lt;p&gt;在專案的根資料夾底下新增 &lt;code&gt;.travis.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;sudo:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;language:&lt;/span&gt; node_js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;cache:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  directories:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; node_modules&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;notifications:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  email:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;node_js:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;before_install:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; npm i -g npm@^&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;before_script:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; npm prune&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;script:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; npm run deploy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;branches:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  only:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;    -&lt;/span&gt; deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;待續&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;參考資料&quot;&gt;&lt;a href=&quot;#參考資料&quot; class=&quot;headerlink&quot; title=&quot;參考資料&quot;&gt;&lt;/a&gt;參考資料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 Travis CI 自動部署網站到 GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;這週把原本自幹的靜態部落格轉到 hexo 去，&lt;/p&gt;
&lt;p&gt;想說辛苦都辛苦了，來整個 CI 也不錯。&lt;/p&gt;
&lt;p&gt;這篇主要紀錄一下如何用 Travis-CI + hexo 在 github page 上發布部落格&lt;/p&gt;
    
    </summary>
    
    
      <category term="CI, Travis CI, github page" scheme="http://abalone0204.github.com/tags/CI-Travis-CI-github-page/"/>
    
  </entry>
  
  <entry>
    <title>做中學 Cycle.js（下）</title>
    <link href="http://abalone0204.github.com/2016/02/01/circle-js-3/"/>
    <id>http://abalone0204.github.com/2016/02/01/circle-js-3/</id>
    <published>2016-02-01T00:00:00.000Z</published>
    <updated>2016-04-24T17:01:39.030Z</updated>
    
    <content type="html">&lt;p&gt;Model-View-Intent &amp;amp; Component&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h1&gt;&lt;p&gt;我們會希望寫出來的 code 能夠做成被複用的 Component，&lt;/p&gt;
&lt;p&gt;不過首先要來拆解一下越來越肥大的 main function。&lt;/p&gt;
&lt;p&gt;而 main 就可以被拆成 Model、View 、Intent。&lt;/p&gt;
&lt;h1 id=&quot;Model-View-Intent&quot;&gt;&lt;a href=&quot;#Model-View-Intent&quot; class=&quot;headerlink&quot; title=&quot;Model View Intent&quot;&gt;&lt;/a&gt;Model View Intent&lt;/h1&gt;&lt;p&gt;先看一下上次 BMI example 的 main function&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeWeight$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value).startWith(&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeHeight$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;.height&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value).startWith(&lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = Rx.Observable.combineLatest(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        changeWeight$,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        changeHeight$, (weight, height) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; heightM = height/&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; bmi = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round(weight / (heightM * heightM));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bmi, weight, height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: state$.map(state =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    label(&lt;span class=&quot;string&quot;&gt;`Weight: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.weight&amp;#125;&lt;/span&gt;kg`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    input(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;range&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        min: &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max: &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value: state.weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    label(&lt;span class=&quot;string&quot;&gt;`Height: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.height&amp;#125;&lt;/span&gt;cm`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    input(&lt;span class=&quot;string&quot;&gt;&#39;.height&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;range&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        min: &lt;span class=&quot;number&quot;&gt;140&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max: &lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value: state.height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h1(&lt;span class=&quot;string&quot;&gt;`BMI is &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.bmi&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這麼大一包看起來絕對不是好事。&lt;/p&gt;
&lt;p&gt;所以我們會把 main 分成三塊，&lt;/p&gt;
&lt;p&gt;分別是 Model, Intent, View&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Intent: to listen to the user&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Model: to process information &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;View: to output back to the user&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Intent&quot;&gt;&lt;a href=&quot;#Intent&quot; class=&quot;headerlink&quot; title=&quot;Intent&quot;&gt;&lt;/a&gt;Intent&lt;/h2&gt;&lt;p&gt;第一塊是「Intent」，&lt;/p&gt;
&lt;p&gt;簡單說就是 User 想對 UI 做什麼事情的 Intent，&lt;/p&gt;
&lt;p&gt;在這裡當然就是指雙方互動的部分：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// input event 就是這個簡單 app 中 User 跟 UI 互動的部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeWeight$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value).startWith(&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeHeight$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;.height&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value).startWith(&lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;intent&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;DOMSource&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeWeight$ = DOMSource.select(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value).startWith(&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeHeight$ = DOMSource.select(&lt;span class=&quot;string&quot;&gt;&#39;.height&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value).startWith(&lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;changeWeight$,changeHeight$&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Model&quot;&gt;&lt;a href=&quot;#Model&quot; class=&quot;headerlink&quot; title=&quot;Model&quot;&gt;&lt;/a&gt;Model&lt;/h2&gt;&lt;p&gt;model 則是處理資料流的部分：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;model&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;changeWeight$, changeHeight$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = Rx.Observable.combineLatest(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        changeWeight$,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        changeHeight$, (weight, height) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; heightM = height/&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; bmi = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round(weight / (heightM * heightM));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bmi, weight, height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state$;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;View&quot;&gt;&lt;a href=&quot;#View&quot; class=&quot;headerlink&quot; title=&quot;View&quot;&gt;&lt;/a&gt;View&lt;/h2&gt;&lt;p&gt;這裏則是依照 Model 中的資料去建 Virtual DOM tree&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我們不會把最後要 return 給 Driver 的東西也放在這&lt;/p&gt;
&lt;p&gt;僅放跟 UI 生成相關的而已&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;view&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;state$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; vtree$ = state$.map(state =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    label(&lt;span class=&quot;string&quot;&gt;`Weight: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.weight&amp;#125;&lt;/span&gt;kg`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    input(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;range&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        min: &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max: &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value: state.weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    label(&lt;span class=&quot;string&quot;&gt;`Height: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.height&amp;#125;&lt;/span&gt;cm`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    input(&lt;span class=&quot;string&quot;&gt;&#39;.height&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;range&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        min: &lt;span class=&quot;number&quot;&gt;140&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max: &lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value: state.height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h1(&lt;span class=&quot;string&quot;&gt;`BMI is &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.bmi&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; vtree$;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;MVI&quot;&gt;&lt;a href=&quot;#MVI&quot; class=&quot;headerlink&quot; title=&quot;MVI&quot;&gt;&lt;/a&gt;MVI&lt;/h2&gt;&lt;p&gt;然後我們的 main 變得簡潔許多，&lt;/p&gt;
&lt;p&gt;看起來只是 function 組合起來而已:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123;changeWeight$,changeHeight$&amp;#125; = intent(sources.DOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = model(changeWeight$, changeHeight$);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; vtree$ = view(state$);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: vtree$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Component&quot;&gt;&lt;a href=&quot;#Component&quot; class=&quot;headerlink&quot; title=&quot;Component&quot;&gt;&lt;/a&gt;Component&lt;/h2&gt;&lt;p&gt;那我們該如何減少重複的 Code 呢？&lt;/p&gt;
&lt;p&gt;當 UI 的操作越變越複雜以後，&lt;/p&gt;
&lt;p&gt;我們不會希望所有事情都能在一個 main 裡面解決，&lt;/p&gt;
&lt;p&gt;這時候我們可以把重複的部分抽出來變成 component。&lt;/p&gt;
&lt;p&gt;egghead 課程裡面有更精簡的怎麼把 main 提煉成 component 的過程，&lt;/p&gt;
&lt;p&gt;不過核心精神蠻簡單的，就是 &lt;strong&gt;props 也是 stream。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因為 props 是會跟著傳下來的「資料」，&lt;/p&gt;
&lt;p&gt;所以很自然的我們就會選擇處理資料的 model 下手。&lt;/p&gt;
&lt;p&gt;而 model 收到的 sources 是從 Drivers 來的，&lt;/p&gt;
&lt;p&gt;第一步就是先更動 drivers&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; drivers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOM: makeDOMDriver(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    props: () =&amp;gt; Rx.Observable.of(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label: &lt;span class=&quot;string&quot;&gt;&#39;Height&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unit: &lt;span class=&quot;string&quot;&gt;&#39;cm&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max: &lt;span class=&quot;number&quot;&gt;220&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init: &lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再來就是把 props 傳進去：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = model(upcomingValue$, sources.props);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;記住： props 也是 Observable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;model&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;upcomingValue$, props$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; initValue$ = props$.map(props =&amp;gt; props.init).first();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; value$ = initValue$.concat(upcomingValue$);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = Rx.Observable.combineLatest(value$, props$, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (value, props) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                label: props.label,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                unit: props.unit,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                min: props.min,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                max: props.max,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                value: value&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;initial value 的 stream concat 新進來 value 的 stream，&lt;/p&gt;
&lt;p&gt;取代原本的 &lt;code&gt;startWith&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下一步就是把 label 的名字和單位給 return 出來，&lt;/p&gt;
&lt;p&gt;變成一條 UI component 可以吃到的 state stream，&lt;/p&gt;
&lt;p&gt;再把對應的值塞進 view 裡面，就能得到我們想要的 vtree$ 了。&lt;/p&gt;
&lt;h2 id=&quot;Using-component-with-Main-function&quot;&gt;&lt;a href=&quot;#Using-component-with-Main-function&quot; class=&quot;headerlink&quot; title=&quot;Using component with Main function&quot;&gt;&lt;/a&gt;Using component with Main function&lt;/h2&gt;&lt;p&gt;我們現在每個 component 中都會有個 main function，&lt;/p&gt;
&lt;p&gt;事實上我們能把 main 改成這個 component 的名字，&lt;/p&gt;
&lt;p&gt;並且在更上層的 main 中去使用它，&lt;/p&gt;
&lt;p&gt;因為事實上他就是一個 function，在 functional programming 中，&lt;/p&gt;
&lt;p&gt;“composable” 可以說是最重要的概念之一。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LabelSlider&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; upcomingValue$ = intent(sources.DOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = model(upcomingValue$, sources.props);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; vtree$ = view(state$);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: vtree$,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; LabelSlider(sources)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而事實上，我們可以把 props 這件事移到 main 中去做&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; props$ = Rx.Observable.of(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label: &lt;span class=&quot;string&quot;&gt;&#39;Height&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unit: &lt;span class=&quot;string&quot;&gt;&#39;cm&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max: &lt;span class=&quot;number&quot;&gt;220&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init: &lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; LabelSlider(&amp;#123;DOM: sources.DOM, props: props$&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; drivers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOM: makeDOMDriver(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Multiple-Components&quot;&gt;&lt;a href=&quot;#Multiple-Components&quot; class=&quot;headerlink&quot; title=&quot;Multiple Components&quot;&gt;&lt;/a&gt;Multiple Components&lt;/h2&gt;&lt;p&gt;如果只有ㄧ個 component 的話，那 cycle.js 也太慘，&lt;/p&gt;
&lt;p&gt;我們當然是可以組合多個 components，&lt;/p&gt;
&lt;p&gt;只是該怎麼做呢？&lt;/p&gt;
&lt;p&gt;很簡單，先把 sinks 個別抽出來：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; weightProps$ = Rx.Observable.of(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label: &lt;span class=&quot;string&quot;&gt;&#39;Weight&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unit: &lt;span class=&quot;string&quot;&gt;&#39;kg&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min: &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max: &lt;span class=&quot;number&quot;&gt;220&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init: &lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; weightSinks$ = LabelSlider(&amp;#123;DOM: sources.DOM, props: weightProps$&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; heightProps$ = Rx.Observable.of(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label: &lt;span class=&quot;string&quot;&gt;&#39;Height&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unit: &lt;span class=&quot;string&quot;&gt;&#39;cm&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max: &lt;span class=&quot;number&quot;&gt;220&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init: &lt;span class=&quot;number&quot;&gt;170&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; heightSinks$ = LabelSlider(&amp;#123;DOM: sources.DOM, props: heightProps$&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; vtree$ = Rx.Observable.combineLatest(weightSinks$.DOM, heightSinks$.DOM, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (weightVtree, heightVtree) =&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            weightVtree,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            heightVtree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: vtree$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏會發現一個問題，就是當我們移動其中一個 slider 時，&lt;/p&gt;
&lt;p&gt;另一個也會被影響 ，使用者的互動 =&amp;gt; intent&lt;/p&gt;
&lt;p&gt;因為兩個的 class 都是 slider，&lt;/p&gt;
&lt;p&gt;而 intent 中監聽的又是 “.slider” 底下的 input。&lt;/p&gt;
&lt;p&gt;其實我們在 LabelSlider 裡就可以讓兩條 stream 分流，&lt;/p&gt;
&lt;p&gt;因為我們傳進去的 &lt;code&gt;sources.DOM&lt;/code&gt;，是可以只要選取 weight 或 height 就好：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; weightSinks$ = LabelSlider(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        props: weightProps$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏做的事情就等於在 intent 裡面這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;intent&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;DOMSource&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; change$ = DOMSource.select(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;).select(&lt;span class=&quot;string&quot;&gt;&#39;.slider&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; change$;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們 &lt;strong&gt;pre-select&lt;/strong&gt; 了在 DOM 上面 class name 為 ‘.weight’的 stream。&lt;/p&gt;
&lt;h1 id=&quot;Isolate-component&quot;&gt;&lt;a href=&quot;#Isolate-component&quot; class=&quot;headerlink&quot; title=&quot;Isolate component&quot;&gt;&lt;/a&gt;Isolate component&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/cyclejs/isolate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Isolate&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要隔離開每個 Component 如果都像上面那樣做應該會瘋掉，&lt;br&gt;所以 Cyclejs 其實提供給我們一個 helper function： isolate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用方法是傳入一個 Component function 當作 argument&lt;br&gt;再來會回傳一個 scoped 的 component function，&lt;br&gt;同樣吃 sources 進去，吐 sinks 出來&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;isolate(dataflowComponent, scope)&lt;/code&gt;：第二個參數是 optional 的，如同看到的一樣&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;可能會有人覺得沒什麼差別，但如果單純使用 &lt;code&gt;isolate(dataflowComponent)&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;那會是一個不純的 function ，因為每次呼叫都會 return 一個不一樣的 scoped component function&lt;/p&gt;
&lt;p&gt;但如果我們指定了 scope，那每次回來的就是同一個 scope 下的 component function&lt;/p&gt;
&lt;p&gt;真正的濃醇香！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; WeightSlider = isolate(LabelSlider, &lt;span class=&quot;string&quot;&gt;&#39;weight&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; weightSinks$ = WeightSlider(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOM: sources.DOM,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    props: weightProps$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; weightVtree$ = weightSinks$.DOM;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此一來又減少了一些 boiler plate&lt;/p&gt;
&lt;h2 id=&quot;Final-BMI&quot;&gt;&lt;a href=&quot;#Final-BMI&quot; class=&quot;headerlink&quot; title=&quot;Final BMI&quot;&gt;&lt;/a&gt;Final BMI&lt;/h2&gt;&lt;p&gt;目前缺的就是把 bmi 給算出來了，&lt;/p&gt;
&lt;p&gt;首先我們知道這個運算會放在 main 裡面，&lt;/p&gt;
&lt;p&gt;因為這就是這個簡單小 App 的主要&lt;strong&gt;邏輯&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; bmi$ = Rx.Observable.combineLatest(weightValue$, heightValue$, (weight, height) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; heightMeters = height * &lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; bmi = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round(weight/(heightMeters*heightMeters))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bmi;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;現在問題來了：我們要怎樣得到 weightValue$ 以及 heightValue$ 呢？&lt;/p&gt;
&lt;p&gt;從 sources 拿啊！&lt;/p&gt;
&lt;p&gt;概念很簡單，我們從 main 中拿到的 source，&lt;/p&gt;
&lt;p&gt;其實就是從前一層 component 中吐出來的 sinks，&lt;/p&gt;
&lt;p&gt;所以我們自然從前一層 component 中回傳的 sinks 下手：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LabelSlider&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; upcomingValue$ = intent(sources.DOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = model(upcomingValue$, sources.props);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; vtree$ = view(state$);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: vtree$,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value: state$.map(state=&amp;gt; state.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;實作起來也是這麼簡單。&lt;/p&gt;
&lt;p&gt;最後我們回到 main 中，&lt;/p&gt;
&lt;p&gt;把 bmi$ 也加進去就成啦！&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; vtree$ = Rx.Observable.combineLatest(bmi$, weightVtree$, heightVtree$, (bmi, weightVtree, heightVtree) =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            weightVtree,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            heightVtree,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            h1(&lt;span class=&quot;string&quot;&gt;`BMI is: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;bmi&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: vtree$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;總計 21 回的課程算不上太長，很推薦有興趣的人去把它看完，&lt;/p&gt;
&lt;p&gt;儘管實際上要弄懂 Cycle.js 的概念的確需要花點時間，&lt;/p&gt;
&lt;p&gt;但學習 FRP 是值得的，畢竟我們就是在處理 dataflow + UI，&lt;/p&gt;
&lt;p&gt;再加上 pure function 好測試、composable 的特性，&lt;/p&gt;
&lt;p&gt;不由得感慨 Rx 寫起來真是爽。&lt;/p&gt;
&lt;p&gt;相較於 React，Cycle.js 當然更接近 functinoal programming，&lt;/p&gt;
&lt;p&gt;不論這個東西將來會不會用到產品上，&lt;/p&gt;
&lt;p&gt;純函數式的東西總會莫名的吸引我。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果要追求 fp，更應該要感受一下 &lt;a href=&quot;http://elm-lang.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;elm&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這一堂課的影片幾乎都在 jsfiddle 上完成，&lt;/p&gt;
&lt;p&gt;（不曉得作者為啥要這樣XD）&lt;/p&gt;
&lt;p&gt;我中間練習的程式碼有放在 &lt;a href=&quot;https://github.com/abalone0204/Learning-Cycle.js-By-Building-it&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt; 上面，&lt;/p&gt;
&lt;p&gt;筆記等年假再來好好整理一番。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;參考資料&quot;&gt;&lt;a href=&quot;#參考資料&quot; class=&quot;headerlink&quot; title=&quot;參考資料&quot;&gt;&lt;/a&gt;參考資料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://cycle.js.org/model-view-intent.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Official doc: Model View Intent&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.codemag.com/Article/1601071&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How Functional Reactive Programming (FRP) is Changing the Face of Web Development&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Model-View-Intent &amp;amp; Component&lt;/p&gt;
    
    </summary>
    
    
      <category term="cycle.js observable" scheme="http://abalone0204.github.com/tags/cycle-js-observable/"/>
    
  </entry>
  
  <entry>
    <title>做中學 Cycle.js（中）</title>
    <link href="http://abalone0204.github.com/2016/01/24/circle-js-2/"/>
    <id>http://abalone0204.github.com/2016/01/24/circle-js-2/</id>
    <published>2016-01-24T00:00:00.000Z</published>
    <updated>2016-04-24T17:01:39.030Z</updated>
    
    <content type="html">&lt;p&gt;Drivers 和一些簡單的例子&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;還沒看過上一篇的可以先去看上一篇了解 Cycle.js，&lt;/p&gt;
&lt;p&gt;這一篇會從 driver 開始講。&lt;/p&gt;
&lt;p&gt;drivers 是在控制畫面的 render，&lt;/p&gt;
&lt;p&gt;但是我們目前的 driver 都是只能回傳字串，&lt;/p&gt;
&lt;p&gt;這一章節我們要真的來認真的操作 DOM，&lt;/p&gt;
&lt;p&gt;並且實作幾個小例子來看看 Cycle.js 這個框架是怎樣改變我們思考資料流的方式。&lt;/p&gt;
&lt;h2 id=&quot;Making-DOM-driver-more-flexible&quot;&gt;&lt;a href=&quot;#Making-DOM-driver-more-flexible&quot; class=&quot;headerlink&quot; title=&quot;Making DOM driver more flexible&quot;&gt;&lt;/a&gt;Making DOM driver more flexible&lt;/h2&gt;&lt;p&gt;這裏要來認真處理一下如何去從 object 去表示一個 DOM，&lt;/p&gt;
&lt;p&gt;假如你之前實作過一個 Virtual DOM 的話，&lt;/p&gt;
&lt;p&gt;我想會相當有幫助。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; element = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(obj.tagName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj.children&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .filter(c =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; c === &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .map(createElement)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .forEach(c =&amp;gt; element.appendChild(c));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj.children&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .filter(c =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; c === &lt;span class=&quot;string&quot;&gt;&#39;string&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .forEach(c =&amp;gt; element.innerHTML += c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; element;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;目前還只是沒加上 props 的簡化版。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DOMDriver&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;obj$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj$.subscribe(obj =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; element = createElement(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Refresh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container.innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container.appendChild(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DOMSource = Observable.fromEvent(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DOMSource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏使用了 appendChild，所以如果不每次都清空的話，&lt;/p&gt;
&lt;p&gt;等於每次都會 append 東西上來。&lt;/p&gt;
&lt;h2 id=&quot;在-DOM-source-掌控更多事情&quot;&gt;&lt;a href=&quot;#在-DOM-source-掌控更多事情&quot; class=&quot;headerlink&quot; title=&quot;在 DOM source 掌控更多事情&quot;&gt;&lt;/a&gt;在 DOM source 掌控更多事情&lt;/h2&gt;&lt;p&gt;回頭看一下我們的 Main，&lt;/p&gt;
&lt;p&gt;發現我們唯一能從 DOM 拿到的 event stream，&lt;/p&gt;
&lt;p&gt;居然只有 click$，這並不符合我們日常的開發情境，&lt;/p&gt;
&lt;p&gt;現在就來解決這個問題。&lt;/p&gt;
&lt;p&gt;解法很簡單，就是在 return DOMSource 的時候，&lt;/p&gt;
&lt;p&gt;給個能夠選取 tag 和 event type 的 interface。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DOMSource = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    selectEvents: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tagName, eventType&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Observable.fromEvent(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;, eventType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .filter(e =&amp;gt; e.target.tagName === tagName.toUpperCase());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏當然還是不夠 general 的版本，&lt;/p&gt;
&lt;p&gt;不過這樣我們在 main function 裡面就能夠簡單的選取另一個 event 了。&lt;/p&gt;
&lt;h2 id=&quot;h&quot;&gt;&lt;a href=&quot;#h&quot; class=&quot;headerlink&quot; title=&quot;h()&quot;&gt;&lt;/a&gt;h()&lt;/h2&gt;&lt;p&gt;一開始我也很疑惑 h 是啥？&lt;/p&gt;
&lt;p&gt;答案很簡單， “h” stands for html&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function h(tagName, children) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tagName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        children&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function h1(children) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return h(&amp;apos;H1&amp;apos;, children);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;讓我們在 main 中要建造 elements 時省去不少力氣。&lt;/p&gt;
&lt;p&gt;而 h1、h2、span⋯⋯等等你想得到的 tag，&lt;/p&gt;
&lt;p&gt;都能藉由 function 來表示，&lt;/p&gt;
&lt;p&gt;並且語法看起來也很簡單，&lt;/p&gt;
&lt;p&gt;連我到後來都不禁思考：「&lt;strong&gt;我們真的需要 jsx 嗎&lt;/strong&gt;？」&lt;/p&gt;
&lt;p&gt;目前只是比較簡單的語法，還沒考慮到 properties，&lt;/p&gt;
&lt;p&gt;在 main 中的長相大概會像這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          .map(i =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h1([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    span([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;`Seconds elapsed &lt;span class=&quot;subst&quot;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Way-to-Real-Driver&quot;&gt;&lt;a href=&quot;#Way-to-Real-Driver&quot; class=&quot;headerlink&quot; title=&quot;Way to Real Driver&quot;&gt;&lt;/a&gt;Way to Real Driver&lt;/h2&gt;&lt;p&gt;處理完語法後，我們來看看怎樣寫出一個更 serious 一點的 driver。&lt;/p&gt;
&lt;p&gt;第一個發現的問題就是我們又把整個 Component 要 mount 的地方寫死了，&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DOMDriver(obj$) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj$.subscribe(obj =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// hard code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; element = createElement(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            container.innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            container.appendChild(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DOMSource = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            selectEvents: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tagName, eventType&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Observable.fromEvent(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;, eventType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .filter(e =&amp;gt; e.target.tagName === tagName.toUpperCase());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DOMSource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這樣的寫法讓我們必須要在 DOM 上一定要有 id 為 app 的 element，&lt;/p&gt;
&lt;p&gt;才能夠啟用 DOMDriver。&lt;/p&gt;
&lt;p&gt;DOMDriver 是一個 function，&lt;/p&gt;
&lt;p&gt;所以我們只要能回傳一個「客製化」的 function，&lt;/p&gt;
&lt;p&gt;這件事情不就解決了嗎？&lt;/p&gt;
&lt;p&gt;這裏運用到了 JavaScript 中「閉包(Closure)」的概念，&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeDOMDriver&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;mountSelector&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (obj$) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        obj$.subscribe(obj =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(mountSelector);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; element = createElement(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            container.innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            container.appendChild(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DOMSource = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            selectEvents: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tagName, eventType&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Observable.fromEvent(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;, eventType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    .filter(e =&amp;gt; e.target.tagName === tagName.toUpperCase());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DOMSource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; drivers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOM: makeDOMDriver(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log: consoleLogDriver,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下一個問題則是：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;container.innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;假如要 bind 到 DOM 上面是一個很大的 object，&lt;/p&gt;
&lt;p&gt;那我們會遭遇到效能的問題。&lt;/p&gt;
&lt;p&gt;再來則是 &lt;code&gt;selectEvents&lt;/code&gt; 這個 function：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;selectEvents: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tagName, eventType&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;它只能指定 tagName，&lt;/p&gt;
&lt;p&gt;不能用更方便的 selector 來選取想要的 element，&lt;/p&gt;
&lt;p&gt;我們應該要提供一個更聰明一點的 API 來做這件事情。&lt;/p&gt;
&lt;p&gt;關於這兩個問題點該怎麼重構，&lt;/p&gt;
&lt;p&gt;作者並沒有詳細說明，但我們可以直接去看 source code，&lt;/p&gt;
&lt;p&gt;這也是我們要將 CycleDOM import 進來的時候。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小記一下，&lt;/p&gt;
&lt;p&gt;假如我們繼續用舊有版本的 run，&lt;/p&gt;
&lt;p&gt;那 &lt;code&gt;selectEvents&lt;/code&gt; 會沒有被綁進去 source 裡面。&lt;/p&gt;
&lt;p&gt;蠻好玩的，可以想一想要怎麼解這一個問題。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下來的正式引進 cycle-dom 中的 makeDOMDriver，&lt;/p&gt;
&lt;p&gt;而原本的程式碼也要跟著做變動。&lt;/p&gt;
&lt;p&gt;沒有意外的，首先需要更動的就是 selectEvents &lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; mouseover$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;span&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;mouseover&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這底下有一個 virtual dom來 handle 重繪，&lt;/p&gt;
&lt;p&gt;不會像我們先前一樣，每次一有更動，&lt;/p&gt;
&lt;p&gt;就重新 flush 整個畫面。&lt;/p&gt;
&lt;p&gt;而 h1, h 也變得更加強大，可以試試看在第一個參數傳入物件，&lt;/p&gt;
&lt;p&gt;可以自訂 attributes，以及調整 style。&lt;/p&gt;
&lt;h2 id=&quot;Hello-Wolrd&quot;&gt;&lt;a href=&quot;#Hello-Wolrd&quot; class=&quot;headerlink&quot; title=&quot;Hello Wolrd&quot;&gt;&lt;/a&gt;Hello Wolrd&lt;/h2&gt;&lt;p&gt;啊！終於要開始 Hello world 了，&lt;/p&gt;
&lt;p&gt;跟以往不一樣的是我們已經跑了一次的底下大概會發生什麼事情，&lt;/p&gt;
&lt;p&gt;才跟世界說 hello。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// return a sinks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: Rx.Observable.of(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                label(&lt;span class=&quot;string&quot;&gt;&#39;Name:&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                input(&lt;span class=&quot;string&quot;&gt;&#39;.field&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    type: &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                hr(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h1(&lt;span class=&quot;string&quot;&gt;&#39;Hello !&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;現在我們用剛剛學到的 select跟 events 來處理一下 input 的 events。&lt;/p&gt;
&lt;p&gt;注意到我們在 input function 那裏的第一個參數寫下 &lt;code&gt;.filed&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;會自動變成帶有 field class 的 input 。&lt;/p&gt;
&lt;p&gt;（準確一點來說應該是 return 一個 virtual dom 的 element）&lt;/p&gt;
&lt;p&gt;長這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;tagName: &lt;span class=&quot;string&quot;&gt;&quot;INPUT&quot;&lt;/span&gt;, properties: &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;, children: &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;], key: &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;, namespace: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;…&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再來則是把 input event 以及 值給拿出來：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; inputEv$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;.field&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; name$ = inputEv$.map(ev =&amp;gt; ev.target.value);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再來要做的事情很直觀，&lt;/p&gt;
&lt;p&gt;就是把 name$ 裏的值給 map 到 DOM 上面去……嗎？&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name$.map(name =&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            label(&lt;span class=&quot;string&quot;&gt;&#39;Name:&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            input(&lt;span class=&quot;string&quot;&gt;&#39;.field&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                type: &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            hr(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            h1(&lt;span class=&quot;string&quot;&gt;&#39;Hello !&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;實際上這樣的作法會讓畫面上什麼都沒有，&lt;/p&gt;
&lt;p&gt;因為 name$ 是 inputEv$ map 過後的結果，&lt;/p&gt;
&lt;p&gt;而一開始 inputEv$ 是空的，自然沒有任何東西會 return 啦！&lt;/p&gt;
&lt;p&gt;但要解決這個問題也很簡單，只需要&lt;code&gt;startWith&lt;/code&gt;這個好用的 operator 即可。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; inputEv$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;.field&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; name$ = inputEv$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .startWith(&lt;span class=&quot;string&quot;&gt;&#39;World&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// return a sinks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: name$.map(name =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                label(&lt;span class=&quot;string&quot;&gt;&#39;Name:&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                input(&lt;span class=&quot;string&quot;&gt;&#39;.field&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    type: &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                hr(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h1(&lt;span class=&quot;string&quot;&gt;`Hello &lt;span class=&quot;subst&quot;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;!`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Hello world 完成啦！&lt;/p&gt;
&lt;h2 id=&quot;Counter&quot;&gt;&lt;a href=&quot;#Counter&quot; class=&quot;headerlink&quot; title=&quot;Counter&quot;&gt;&lt;/a&gt;Counter&lt;/h2&gt;&lt;p&gt;在開始之前得提醒一下，&lt;/p&gt;
&lt;p&gt;跟 Redux 在開發之前得先想好 StateTree 的道理有點像，&lt;/p&gt;
&lt;p&gt;在 Cycle 中，我們會體會到要怎樣設計一個 Stream 的流向，&lt;/p&gt;
&lt;p&gt;而 UI 只要跟著這個 Flow 去變化就行了&lt;/p&gt;
&lt;p&gt;（狀態顯示為 Reactive 狂粉）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;來個經典的 Counter example 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;廢話不多說，&lt;/p&gt;
&lt;p&gt;就先把頁面和 increment 以及 decrement 的 click stream 弄出來：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; decrementClick$ = sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;#decrement&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; incrementClick$=sources.DOM.select(&lt;span class=&quot;string&quot;&gt;&#39;#increment&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: Rx.Observable.of(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                button(&lt;span class=&quot;string&quot;&gt;&#39;#decrement&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Decrement&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                button(&lt;span class=&quot;string&quot;&gt;&#39;#increment&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Increment&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    label(&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;拿到 Stream 之後呢？&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; decrementAction$ = decrementClick$.map(ev =&amp;gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; incrementAction$ = incrementClick$.map(ev =&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; number$ = Rx.Observable.of(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .merge(decrementAction$)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .merge(incrementAction$);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏並沒有得到我們想要的東西，&lt;/p&gt;
&lt;p&gt;來看一下 merge stream 是怎樣運作的，&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0---------------- number$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--(-1)-(-1)------ decrementAction$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------1---incrementAction$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [merge]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0-(-1)-(-1)--1---[merged$]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們必須有個東西把 Stream 上所有的值給加總，&lt;/p&gt;
&lt;p&gt;想到 array 的 reduce 了嗎？&lt;/p&gt;
&lt;p&gt;其實 Rx 有提供一個 Operator 給我們做類似的操作：&lt;/p&gt;
&lt;p&gt;它叫做 &lt;code&gt;scan&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; number$ = Rx.Observable.of(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .merge(decrementAction$)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .merge(incrementAction$)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .scan((prev, cur) =&amp;gt; prev+cur);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Cycle 強迫我們在一開始就想好資料的流向，&lt;/p&gt;
&lt;p&gt;以及事件的處理，如此我們在開發的時候能夠更深思熟慮一點，&lt;/p&gt;
&lt;p&gt;不會讓整個 Project 變得很 crazy。&lt;/p&gt;
&lt;p&gt;在簡單的 Counter 下這好處還不明顯，我目前也沒用 Cycle 寫過大型的產品，&lt;/p&gt;
&lt;p&gt;所以且讓我們繼續看下去。&lt;/p&gt;
&lt;h2 id=&quot;Cycle-Http-Driver&quot;&gt;&lt;a href=&quot;#Cycle-Http-Driver&quot; class=&quot;headerlink&quot; title=&quot;Cycle Http Driver&quot;&gt;&lt;/a&gt;Cycle Http Driver&lt;/h2&gt;&lt;p&gt;開發 web，我們當然會需要送 http request，&lt;/p&gt;
&lt;p&gt;所以我們就需要 http driver。&lt;/p&gt;
&lt;p&gt;這裏我們要從 github 的 api 來拿 users 資料。&lt;/p&gt;
&lt;p&gt;一樣先把基本的頁面弄出來&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: Rx.Observable.of(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                button(&lt;span class=&quot;string&quot;&gt;&#39;.get_first&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;Get first user&#39;&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div(&lt;span class=&quot;string&quot;&gt;&#39;.user_details&#39;&lt;/span&gt;, [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    h1(&lt;span class=&quot;string&quot;&gt;&#39;.user_name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;(name)&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    h4(&lt;span class=&quot;string&quot;&gt;&#39;.email&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;(email)&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    a(&lt;span class=&quot;string&quot;&gt;&#39;.web&#39;&lt;/span&gt;, &amp;#123;href: &lt;span class=&quot;string&quot;&gt;&#39;google.com&#39;&lt;/span&gt;&amp;#125;,&lt;span class=&quot;string&quot;&gt;&#39;(url)&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們想讓使用者點下 get_first 的按鈕後，&lt;/p&gt;
&lt;p&gt;就拿到 user 的資料。&lt;/p&gt;
&lt;p&gt;前面有提到什麼是 read effect 跟 write effect，&lt;/p&gt;
&lt;p&gt;effect 會因應 logics 規則的變化，真正影響到外在世界。&lt;/p&gt;
&lt;p&gt;實際講起來太抽象了，我們現在把這個 App 中會發生的 effect 以及分類列出來，&lt;/p&gt;
&lt;p&gt;會清楚很多：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DOM Read effect : button clicked&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HTTP Write effect: send request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HTTP Read effect: receive response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DOM Write effect: user&amp;apos;s data displayed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// DOM Read effect : button clicked&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; clickEv$ = sources.DOM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .select(&lt;span class=&quot;string&quot;&gt;&#39;.get_user&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// HTTP Write effect: send request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; request$ = clickEv$.map(_ =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url: API_URL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            method: &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// HTTP Read effect: receive response&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; response$$ = sources.HTTP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .filter(response$ =&amp;gt; response$.request.url === API_URL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; response$ = response$$.&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; firstUser$ = response$.map(res =&amp;gt; res.body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .startWith(&amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// DOM Write effect: user&#39;s data displayed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: firstUser$.map(user =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                button(&lt;span class=&quot;string&quot;&gt;&#39;.get_user&#39;&lt;/span&gt;, [&lt;span class=&quot;string&quot;&gt;&#39;Get user&#39;&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div(&lt;span class=&quot;string&quot;&gt;&#39;.user_details&#39;&lt;/span&gt;, [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    h1(&lt;span class=&quot;string&quot;&gt;&#39;.user_name&#39;&lt;/span&gt;, user.name),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    h4(&lt;span class=&quot;string&quot;&gt;&#39;.email&#39;&lt;/span&gt;, user.email),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    a(&lt;span class=&quot;string&quot;&gt;&#39;.web&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        href: user.url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;, user.url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HTTP: request$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;BMI&quot;&gt;&lt;a href=&quot;#BMI&quot; class=&quot;headerlink&quot; title=&quot;BMI&quot;&gt;&lt;/a&gt;BMI&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;sources&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeWeight$ = sources.select(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; changeHeight$ = sources.select(&lt;span class=&quot;string&quot;&gt;&#39;.height&#39;&lt;/span&gt;).events(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .map(ev =&amp;gt; ev.target.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Need to combine two $,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Like we use `zip` to arrays.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; state$ = Rx.Observable.combineLatest(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        changeWeight$,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        changeHeight$, (weight, height) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; heightM = height/&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; bmi = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round(weight / (heightM * heightM));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bmi, weight, height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: state$.map(state =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    label(&lt;span class=&quot;string&quot;&gt;`Weight: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.weight&amp;#125;&lt;/span&gt;kg`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    input(&lt;span class=&quot;string&quot;&gt;&#39;.weight&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;range&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        min: &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max: &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value: state.weight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                div([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    label(&lt;span class=&quot;string&quot;&gt;`Height: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.height&amp;#125;&lt;/span&gt;cm`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    input(&lt;span class=&quot;string&quot;&gt;&#39;.height&#39;&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        type: &lt;span class=&quot;string&quot;&gt;&#39;range&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        min: &lt;span class=&quot;number&quot;&gt;140&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        max: &lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        value: state.height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                h1(&lt;span class=&quot;string&quot;&gt;`BMI is &lt;span class=&quot;subst&quot;&gt;$&amp;#123;state.bmi&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在處理 Stream 時，往 Collection 的方向想會舒服很多，&lt;/p&gt;
&lt;p&gt;因為我們處理 Array 也是如此，&lt;/p&gt;
&lt;p&gt;最後一篇我們將會來看看 Cycle.js 怎樣提高我們程式碼的複用性，&lt;/p&gt;
&lt;p&gt;學習用另一種方式去思考該怎樣拆解每個 Component。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;參考資料&quot;&gt;&lt;a href=&quot;#參考資料&quot; class=&quot;headerlink&quot; title=&quot;參考資料&quot;&gt;&lt;/a&gt;參考資料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://openhome.cc/Gossip/JavaScript/Closure.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;閉包&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36#.arfskyb6g&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Master the JavaScript Interview: What is a Closure?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Drivers 和一些簡單的例子&lt;/p&gt;
    
    </summary>
    
    
      <category term="cycle.js observable" scheme="http://abalone0204.github.com/tags/cycle-js-observable/"/>
    
  </entry>
  
  <entry>
    <title>做中學 Cycle.js（上）</title>
    <link href="http://abalone0204.github.com/2016/01/23/cycle-js-basic/"/>
    <id>http://abalone0204.github.com/2016/01/23/cycle-js-basic/</id>
    <published>2016-01-23T00:00:00.000Z</published>
    <updated>2016-04-24T17:01:39.030Z</updated>
    
    <content type="html">&lt;p&gt;之前 Redux 和 Cycle.js 作者在爭辯何者才是較好的 paradigm，&lt;/p&gt;
&lt;p&gt;其實軟體開發裡面沒有銀彈，&lt;/p&gt;
&lt;p&gt;不過這種爭辯也更能夠激發出我們寫出更棒的軟體，&lt;/p&gt;
&lt;p&gt;並且去反思現行流行的東西真的是「好」的嗎？&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Cycle.js 的作者也寫下一篇他認為為什麼 Redux + React 不那麼好的原因：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://staltz.com/why-react-redux-is-an-inferior-paradigm.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WHY REACT/REDUX IS AN INFERIOR PARADIGM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同時間在 egghead.io 上也 release 了一個 Cycle.js 的課程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://egghead.io/lessons/rxjs-the-cycle-js-principle-separating-logic-from-effects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lessons of Cycle.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(等等，這時機推出課程，真的不是在打廣告嗎？)&lt;/p&gt;
&lt;p&gt;我認為這個課程還蠻推薦的原因有底下兩點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;作者會告訴我們 Cycle.js 這樣設計的理念&lt;/strong&gt;&lt;br&gt;對我來說在學習一個框架時，&lt;br&gt;如果你不能理解為什麼要這樣設計，&lt;br&gt;那你就是用硬背的，這樣很容易忘記；&lt;br&gt;但如果你知道為什麼要命名成這樣、為什麼要這樣設計，&lt;br&gt;你等於進入了框架本身去使用它，&lt;br&gt;而不是被它框住。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Observable 給我們不一樣的方式來思考如何 Handle events&lt;/strong&gt;&lt;br&gt;可以看看 Netflix 的&lt;a href=&quot;https://www.youtube.com/watch?v=XRYN2xt11Ek&amp;amp;hd=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;例子&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;週末在家拉肚子之餘，順便把課程課完並做了一些筆記。&lt;/p&gt;
&lt;p&gt;先來看一下 Cycle.js 的 Get started code，&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Cycle &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@cycle/core&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CycleDOM &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;@cycle/dom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; drivers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  DOM: CycleDOM.makeDOMDriver(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cycle.run(main, drivers);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;現在看起來很不習慣，但這篇會從無到有的建一個簡單版的 Cycle.js 出來，&lt;/p&gt;
&lt;p&gt;第一篇預計會實作很 primitve 的 drivers 以及 main，&lt;/p&gt;
&lt;p&gt;接著會把 run 給重構到幾乎跟現在 Cycle 核心中的寫法一樣。&lt;/p&gt;
&lt;p&gt;（當然還是只重概念說明的簡化版）&lt;/p&gt;
&lt;p&gt;不過這都只是個人的學習筆記，&lt;/p&gt;
&lt;p&gt;還是在大大推一下 egghead.io 上的課程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://egghead.io/lessons/rxjs-the-cycle-js-principle-separating-logic-from-effects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lessons of Cycle.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Prerequisite&quot;&gt;&lt;a href=&quot;#Prerequisite&quot; class=&quot;headerlink&quot; title=&quot;Prerequisite&quot;&gt;&lt;/a&gt;Prerequisite&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;了解如何操作 collection&lt;br&gt;沒錯，Observable 和 array（或list）都是 collection&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以試試這個互動的課程，再來看這系列會更有感覺：&lt;br&gt;&lt;a href=&quot;http://reactivex.io/learnrx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/learnrx/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;對於 Rx 已經有基礎的認識&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Cycle-js&quot;&gt;&lt;a href=&quot;#Cycle-js&quot; class=&quot;headerlink&quot; title=&quot;Cycle.js&quot;&gt;&lt;/a&gt;Cycle.js&lt;/h2&gt;&lt;h3 id=&quot;Basic-Principle&quot;&gt;&lt;a href=&quot;#Basic-Principle&quot; class=&quot;headerlink&quot; title=&quot;Basic Principle&quot;&gt;&lt;/a&gt;Basic Principle&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;第一條規則就是要將「logics」跟「effect」分開&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要來分清楚這兩個東西是什麼就要先來看一下程式碼了：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Logic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .map(i =&amp;gt; &lt;span class=&quot;string&quot;&gt;`Seconds elapsed &lt;span class=&quot;subst&quot;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Effect &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe(text =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container.textContent = text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這是一個從 0 開始每一秒一數的計數器，&lt;/p&gt;
&lt;p&gt;詳情請見 &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/timer.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Timer&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;上半部的部分是「Logic」，&lt;/p&gt;
&lt;p&gt;而 subscribe 那一行開始，就是他怎樣呈現的 「Effect」。&lt;/p&gt;
&lt;p&gt;這裏有個很巧妙的概念，&lt;/p&gt;
&lt;p&gt;就是 Effect 才是真正影響到外面世界的地方（DOM），&lt;/p&gt;
&lt;p&gt;正如他的名字一樣；&lt;/p&gt;
&lt;p&gt;而 Logic 裏的東西只是單純的 Event stream，&lt;/p&gt;
&lt;p&gt;我們不去 Subscribe 他們，就不會有任何事情發生。&lt;/p&gt;
&lt;p&gt;Cycle.js 的原則就是將這兩大部分分開，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Effect&lt;/code&gt; 的部分是 Imperative 的，讓 Framework 幫你完成，&lt;/p&gt;
&lt;p&gt;身為開發者我們只要關心 &lt;code&gt;Logic&lt;/code&gt; 的部分就夠了，&lt;/p&gt;
&lt;p&gt;而 Logic 的部分是 functional 的。&lt;/p&gt;
&lt;h3 id=&quot;Main-以及-Effect&quot;&gt;&lt;a href=&quot;#Main-以及-Effect&quot; class=&quot;headerlink&quot; title=&quot;Main 以及 Effect&quot;&gt;&lt;/a&gt;Main 以及 Effect&lt;/h3&gt;&lt;p&gt;前面提到我們會將 logic 和 effect 分開，&lt;/p&gt;
&lt;p&gt;在 Cycle 中我們習慣會將 Logic 放到 main 裡面。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       .map(i =&amp;gt; &lt;span class=&quot;string&quot;&gt;`Seconds elapsed &lt;span class=&quot;subst&quot;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log: Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       .map(i =&amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DOMEffect&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;text$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text$.subscribe(text =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container.textContent = text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;consoleLogEffect&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;msg$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg$.subscribe(msg =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(msg));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sink = main();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DOMEffect(sink.DOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;consoleLogEffect(sink.Log);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們在 Main 裡面建了兩條不同的 stream，&lt;/p&gt;
&lt;p&gt;看起來已經將邏輯集中起來放，&lt;/p&gt;
&lt;p&gt;但是最下方從 sink 開始，&lt;/p&gt;
&lt;p&gt;似乎還是太 imperative 地去做這些事情。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我們 Hard Coding 的去指定 consoleLogEffect 這個函數，&lt;/p&gt;
&lt;p&gt;一旦我們今天把 main 中的 log 拔掉，&lt;/p&gt;
&lt;p&gt;那整個程式就會報錯了，&lt;/p&gt;
&lt;p&gt;Cycle.js 中不希望我們每次更動 Logic 時需要注意一大堆 effect&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再來就要介紹一下 &lt;code&gt;run&lt;/code&gt; 這個 function。&lt;/p&gt;
&lt;h3 id=&quot;run&quot;&gt;&lt;a href=&quot;#run&quot; class=&quot;headerlink&quot; title=&quot;run&quot;&gt;&lt;/a&gt;&lt;code&gt;run&lt;/code&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;mainFn, effects&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sinks = mainFn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(effects)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .forEach(key =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        effects[key](sinks[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; effectsFunctions = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOM: DOMEffect,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log: consoleLogEffect,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;run(main, effectsFunctions);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;run&lt;/code&gt; 會吃兩個參數，第一個就是我們管邏輯的 main，&lt;/p&gt;
&lt;p&gt;第二個則是 effect，&lt;/p&gt;
&lt;p&gt;我們如果不想要他在畫面上做事情，&lt;/p&gt;
&lt;p&gt;把在 effectFunctions 中的那個 key 給註解掉就行了，&lt;/p&gt;
&lt;p&gt;因為我們並沒有很 hard coding 的去呼叫每個 effectFunction。&lt;/p&gt;
&lt;p&gt;但是這裡要重新命名一下，將 effectFunctions 改成 drivers，&lt;/p&gt;
&lt;p&gt;一來是因為 effectFunctions 聽起來並不是個好命名方式XD&lt;/p&gt;
&lt;p&gt;二來是 drivers 即是我們熟悉的驅動程式，建立了硬體和軟體中間溝通的介面；&lt;/p&gt;
&lt;p&gt;而這裡的 driver 可以想成我們的程式(logic)，和畫面(effect)中間溝通的介面；&lt;/p&gt;
&lt;p&gt;還是很抽象嗎？&lt;/p&gt;
&lt;p&gt;那就從字面上的意思來看， driver 就是駕駛員，&lt;/p&gt;
&lt;p&gt;現在有一個駕駛員負責開著一台小車車，&lt;/p&gt;
&lt;p&gt;嘟嘟嘟的把我們寫的邏輯運送到畫面上，&lt;/p&gt;
&lt;p&gt;我們只要寫好邏輯、還有要送去的地方跟方式，&lt;/p&gt;
&lt;p&gt;剩下的就交給 driver 幫我們處理啦！&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;mainFn, drivers&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sinks = mainFn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(drivers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .forEach(key =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drivers[key](sinks[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; drivers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOM: DOMDriver,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Log: consoleLogDriver,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;run(main, drivers);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這是我們手刻出來的簡單版本，&lt;/p&gt;
&lt;p&gt;而 Cycle.js 首頁的 get started 例子中，&lt;/p&gt;
&lt;p&gt;輪廓的確就是這樣子，&lt;/p&gt;
&lt;p&gt;只是在 driver 的部分，&lt;/p&gt;
&lt;p&gt;Cycle.js 幫我們做了更多事情。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOM: Rx.Observable.interval(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .map(i =&amp;gt; CycleDOM.h1(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; + i + &lt;span class=&quot;string&quot;&gt;&#39; seconds elapsed&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; drivers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  DOM: CycleDOM.makeDOMDriver(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cycle.run(main, drivers);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Read-effects-from-the-External-world&quot;&gt;&lt;a href=&quot;#Read-effects-from-the-External-world&quot; class=&quot;headerlink&quot; title=&quot;Read effects from the External world&quot;&gt;&lt;/a&gt;Read effects from the External world&lt;/h3&gt;&lt;p&gt;前面有提過 Netflix 解決複雜電影選單的方式，&lt;/p&gt;
&lt;p&gt;就是透過 Observable 來重新思考處理 Events 的方式，&lt;/p&gt;
&lt;p&gt;但到目前為止，我們都還沒有用到最精髓的部分，&lt;/p&gt;
&lt;p&gt;而是把內部 Logic 寫好，沒有接收任何外來的 event stream。&lt;/p&gt;
&lt;p&gt;奠基於 Rx 上面的 Cycle.js 最精華的也正是這一段處理 event 的方式，&lt;/p&gt;
&lt;p&gt;同時這也是 &lt;strong&gt;Cycle&lt;/strong&gt; 這名字的由來。&lt;/p&gt;
&lt;p&gt;首先先看前面寫的程式碼：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DOMDriver&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;text$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text$.subscribe(text =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container.textContent = text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .map(i =&amp;gt; &lt;span class=&quot;string&quot;&gt;`Seconds elapsed &lt;span class=&quot;subst&quot;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;`&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log: Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .map(i =&amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到它只有 input，沒有 output。&lt;/p&gt;
&lt;p&gt;而 main function 則反之，&lt;/p&gt;
&lt;p&gt;我們想從外部 read something ，就代表我們的 main 必須要有 input。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;這裏的前提是你照著 cycle.js 的單向資料流架構走&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以我們先在 main 和 driver 各加上 input 和 output。&lt;/p&gt;
&lt;p&gt;接下來在 &lt;code&gt;run&lt;/code&gt; 中會改回 hard code 的方式，&lt;/p&gt;
&lt;p&gt;這是為了更容易去理解，接著就會遇到最奇妙的地方：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DOMDriver&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;text$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text$.subscribe(text =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; container = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#app&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        container.textContent = text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DOMSource = Observable.fromEvent(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DOMSource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;mainFn, drivers&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sinks = mainFn(DOMSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DOMSource = drivers.DOM(sinks.DOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我們看到 run 中間，DOMSource 需要 sinks 才能建立，&lt;/p&gt;
&lt;p&gt;但 sinks 也需要 DOMSource 才能被建立，&lt;/p&gt;
&lt;p&gt;形成一個很微妙的循環，是一個雞生蛋蛋生雞的問題。&lt;/p&gt;
&lt;p&gt;在更抽象化一點就是：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = f(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = g(a)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;想要解決這件事其實沒那麼難，&lt;/p&gt;
&lt;p&gt;想法上是這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bProxy = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = f(bproxy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = g(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bProxy.imitate(b)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏要靠 rx 裡面的 subject 來建立我們的 proxy。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;瞭解更多關於 Subject: &lt;/p&gt;
&lt;p&gt;from &lt;a href=&quot;http://xgrommx.github.io/rx-book/content/getting_started_with_rxjs/subjects.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rx-book&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;簡言之它同時繼承了 Observable 跟 Observer，&lt;/p&gt;
&lt;p&gt;所以我們既可以 subscribe 它，（Observable）&lt;/p&gt;
&lt;p&gt;又能夠對他呼叫 onNext、onError，以及 onCompleted（這就是 Observer 在做的事情）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這裏就比較困難要分段看了，&lt;/p&gt;
&lt;p&gt;先到 run 裡面看看我們要怎麼按照上方的 pattern 來加入 proxy。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;mainFn, drivers&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; proxyDOMSource = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Subject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sinks = mainFn(proxyDOMSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; DOMSource = drivers.DOM(sinks.DOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DOMSource.subscribe(click =&amp;gt; proxyDOMSource.onNext(click))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DOMDriver 回傳了一個 click-event 的 stream（Observable），&lt;/p&gt;
&lt;p&gt;所以我們 subscribe 它，並且每一次呼叫 click 的 stream，&lt;/p&gt;
&lt;p&gt;跟我們前面創造的 proxy 整合在一起，&lt;/p&gt;
&lt;p&gt;下來再來看 proxy 傳進 main 發生了什麼事情。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;DOMSource&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; click$ = DOMSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DOM: click$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .startWith(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .flatMapLatest(() =&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .map(i =&amp;gt; &lt;span class=&quot;string&quot;&gt;`Seconds elapsed &lt;span class=&quot;subst&quot;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log: Observable.timer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            .map(i =&amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;簡單說就是我們每次在螢幕上按一下(click)，&lt;/p&gt;
&lt;p&gt;就會重啟整個 timer。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;歸功於 flapMapLatest 這個 operator，&lt;/p&gt;
&lt;p&gt;假如這裡改用 flapMap 的話，會發現舊的 stream 還在繼續跑，&lt;/p&gt;
&lt;p&gt;整個 timer 會被搗亂，假如還不熟 flatMap 該怎麼用&lt;/p&gt;
&lt;p&gt;請至 prerequisite 玩一下 &lt;a href=&quot;http://reactivex.io/learnrx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;learn-rx&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而 &lt;code&gt;startWith(null)&lt;/code&gt; 則是製造一次「假的」 event，&lt;/p&gt;
&lt;p&gt;來觸發第一次還沒 click 之前的 effect。&lt;/p&gt;
&lt;p&gt;現在的 code 看起來很糟糕，尤其是在 main 中 hard code DOMSource 這一點。&lt;/p&gt;
&lt;p&gt;首先先從 run 中下手：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;mainFn, drivers&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; proxySources = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(drivers).forEach(key =&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxySources[key] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Subject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sinks = mainFn(proxySources);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.keys(drivers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          .forEach(key =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; source = drivers[key](sinks[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            source.subscribe(x =&amp;gt; proxySources[key].onNext(x))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此一來我們就不用去 hard code 的指定每個 proxySource，&lt;/p&gt;
&lt;p&gt;而在 main 中簡單多了，只要把 click$ 的來源變成 sources.DOM 就好了，&lt;/p&gt;
&lt;p&gt;但在這裡我們可能會對一個 undefined 呼叫 subscribe。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;consoleLogDriver 並沒有 return 任何東西（nothing to be read）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要避免這點只要加個判斷式就能夠解決，&lt;/p&gt;
&lt;p&gt;不過截至目前為止，我們其實已經把 Cycle core 中的 run 給實作的差不多了！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cyclejs/cycle-core/blob/master/src/cycle.js#L97:L118&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;source code of run in Cycle.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;當然還是有些差異在，像是 error-handling，&lt;/p&gt;
&lt;p&gt;以及在 Cycle core 的 proxy 中是用 &lt;code&gt;ReplaySubject&lt;/code&gt; 而不是 &lt;code&gt;Subject&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;參考資料&quot;&gt;&lt;a href=&quot;#參考資料&quot; class=&quot;headerlink&quot; title=&quot;參考資料&quot;&gt;&lt;/a&gt;參考資料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://staltz.com/why-react-redux-is-an-inferior-paradigm.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WHY REACT/REDUX IS AN INFERIOR PARADIGM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://staltz.com/unidirectional-user-interface-architectures.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UNIDIRECTIONAL USER INTERFACE ARCHITECTURES&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://xgrommx.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rx-book&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前 Redux 和 Cycle.js 作者在爭辯何者才是較好的 paradigm，&lt;/p&gt;
&lt;p&gt;其實軟體開發裡面沒有銀彈，&lt;/p&gt;
&lt;p&gt;不過這種爭辯也更能夠激發出我們寫出更棒的軟體，&lt;/p&gt;
&lt;p&gt;並且去反思現行流行的東西真的是「好」的嗎？&lt;/p&gt;
    
    </summary>
    
    
      <category term="cycle.js, observable" scheme="http://abalone0204.github.com/tags/cycle-js-observable/"/>
    
  </entry>
  
  <entry>
    <title>我的前端工程師之路</title>
    <link href="http://abalone0204.github.com/2016/01/18/way-to-fed/"/>
    <id>http://abalone0204.github.com/2016/01/18/way-to-fed/</id>
    <published>2016-01-18T00:00:00.000Z</published>
    <updated>2016-04-24T17:01:39.030Z</updated>
    
    <content type="html">&lt;p&gt;「這個畫面幫我稍微調一下應該沒有很難吧？」&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Hi 大家，先簡介一下自己背景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非資工資科資管系(也就是所謂的非本科系)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;其實我覺得第一點不是很重要、我也很討厭強調，&lt;/p&gt;
&lt;p&gt;但偏偏就是很常被問，&lt;/p&gt;
&lt;p&gt;要不然就是別人聽到你大學是XX系就會：「蛤？」&lt;/p&gt;
&lt;p&gt;索性就把它列出來了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;興趣使然的前端工程師，擅長一鍵跑版&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;沒上過資策會、巨匠，或任何各種職訓班，但買過 tree house 的課程和幾本書&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;學習時間：一年半（從碼盲到現在終於可以改一些 code）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;稍微熟一點的技能： JavaScript, CSS, html, React.js&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;預計未來要學的東西：Haskell, golang, Angular(2.0), Rx.js&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;這是之前相關的&lt;a href=&quot;http://westudent-blog.sudo.com.tw/denny-sudo.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;專訪&lt;/a&gt;，但我一直都想自己寫一篇，也不是 William 寫得不好，但總覺得哪裡不對勁，也許自幹就是一種工程師的浪漫吧！&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;後來想想，也許是整篇文章太強調「本科」影響不大&lt;/p&gt;
&lt;p&gt;事實上我想說的是：「非本科不該是阻擋你寫程式的理由。」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;總之這篇就是來介紹一下我是怎麼慢慢上手這個職業，中間會提到一些我覺得很棒的學習資源，和吸收新知的方式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;說到吸收新知，目前首推&lt;a href=&quot;http://weekly.codetengu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;碼天狗&lt;/a&gt;，它讓我禮拜一早上都會很焦慮的重新整理，大家可以感受一下。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Porjects&quot;&gt;&lt;a href=&quot;#Porjects&quot; class=&quot;headerlink&quot; title=&quot;Porjects&quot;&gt;&lt;/a&gt;Porjects&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;這是我簡介自己做過 projects 的&lt;a href=&quot;http://slides.com/dennyku/deck-1#/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;slide&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;會放這個是因為我本來要買月費專案($7/month)，卻手滑買到年費專案($70/year)，gan，只好多多利用它了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Get-started&quot;&gt;&lt;a href=&quot;#Get-started&quot; class=&quot;headerlink&quot; title=&quot;Get started&quot;&gt;&lt;/a&gt;Get started&lt;/h1&gt;&lt;p&gt;其實我本來立志成為一個 Data Scientist ，&lt;/p&gt;
&lt;p&gt;只是不小心被擺到前端的位置上去……&lt;/p&gt;
&lt;p&gt;回顧這一年半的旅程，前端的東西真的太多太雜了，&lt;/p&gt;
&lt;p&gt;更容易完全只知其然而不知其所以然的就開始用某個新框架、library，&lt;/p&gt;
&lt;p&gt;所以對我來說，&lt;strong&gt;「學什麼」是副課題，「不學什麼」才是真正的關鍵&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;因為我前端工程師的路還沒走完，&lt;/p&gt;
&lt;p&gt;所以應該在我退休或換職業（去賣雞排）之前，&lt;/p&gt;
&lt;p&gt;都會繼續寫下去。&lt;/p&gt;
&lt;p&gt;目前寫完三點：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;非本科系 v.s 本科系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;從哪裡開始學習？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;前端工程師該懂後端嗎？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-非本科系-v-s-本科系&quot;&gt;&lt;a href=&quot;#1-非本科系-v-s-本科系&quot; class=&quot;headerlink&quot; title=&quot;1. 非本科系 v.s 本科系&quot;&gt;&lt;/a&gt;1. 非本科系 v.s 本科系&lt;/h2&gt;&lt;p&gt;就來說說&lt;strong&gt;「本科系」&lt;/strong&gt;來到底有沒有差。&lt;/p&gt;
&lt;p&gt;首先，我們都知道學校裡的課程，&lt;/p&gt;
&lt;p&gt;很少是真的專注在所謂「&lt;strong&gt;前端工程&lt;/strong&gt;」上；&lt;/p&gt;
&lt;p&gt;這是可以理解的，一來因為前端變化太快，&lt;/p&gt;
&lt;p&gt;學期初才在說好棒棒的東西，&lt;/p&gt;
&lt;p&gt;到了學期末可能就變 deprecated了。&lt;/p&gt;
&lt;p&gt;所以這就代表非本科系跟本科系的人站在相同的學習立足點上了嗎？&lt;/p&gt;
&lt;p&gt;No，你得面對現實，本科生就是有他的優勢在。&lt;/p&gt;
&lt;p&gt;這裏要講個實習的故事。&lt;/p&gt;
&lt;p&gt;我第一間去實習的新創公司，應徵的是行銷，&lt;/p&gt;
&lt;p&gt;CEO 是個自己學習 JavaScript 並且把產品做出來的人，&lt;/p&gt;
&lt;p&gt;更重要的是他是個很願意教的人，&lt;/p&gt;
&lt;p&gt;在我表示我想朝這方向前進的意願時，&lt;/p&gt;
&lt;p&gt;他很大方的說：「如果你對 JavaScript 有興趣可以教你。」&lt;/p&gt;
&lt;p&gt;當時還有另一位是資管系的同學也一起，&lt;/p&gt;
&lt;p&gt;第一次的作業是用 Angular 做表單的驗證，&lt;/p&gt;
&lt;p&gt;怎麼讓使用者不能繼續輸入資料呢？&lt;/p&gt;
&lt;p&gt;（當時的我連 JavaScript、html 都不會寫）&lt;/p&gt;
&lt;p&gt;我的做法是非常土炮的將 input 換成 div 然後加上紅色的邊框，&lt;/p&gt;
&lt;p&gt;另一位實習生則是使用了 disabled 這個 property，就搞定了。&lt;/p&gt;
&lt;p&gt;講起來也沒什麼了不起的技巧，但不知道就是不知道。&lt;/p&gt;
&lt;p&gt;我問他怎麼會知道有 disabled 這個特性，&lt;/p&gt;
&lt;p&gt;他的回答也很簡單：「查文件啊！」&lt;/p&gt;
&lt;p&gt;也是這次教訓，我知道要先&lt;strong&gt;查文件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;講起來蠻白癡，&lt;/p&gt;
&lt;p&gt;不過會上 &lt;a href=&quot;http://stackoverflow.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt; 和 google 找答案和看官方文件，&lt;/p&gt;
&lt;p&gt;都是最基本的能力。&lt;/p&gt;
&lt;p&gt;為什麼他會知道？&lt;/p&gt;
&lt;p&gt;很簡單，因為平常他們在寫作業或作專題就需要這個能力。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/B8wms6V.png&quot; alt=&quot;rtfm&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;既然我們遇到不會的字會查字典，&lt;br&gt;那為什麼我們寫軟體遇到問題時，不需要讀 doc 呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而對於整個電腦的理解，非本科系的人絕對也是被甩在幾條街之外，&lt;/p&gt;
&lt;p&gt;因為我們不需要修資料結構、演算法，&lt;/p&gt;
&lt;p&gt;更別說對於資料庫，&lt;/p&gt;
&lt;p&gt;作業系統、計算機結構、計算機組織、編譯器理解的淺薄，&lt;/p&gt;
&lt;p&gt;一定要掌握上述這些知識才能寫前端嗎？&lt;/p&gt;
&lt;p&gt;這是一個很大的疑問；&lt;/p&gt;
&lt;p&gt;但一個了解底下發生什麼事情的人，才會更知道極限在哪裏，&lt;/p&gt;
&lt;p&gt;這個絕對是肯定的。&lt;/p&gt;
&lt;p&gt;有時候你寫程式時會卡在一個小小的點，想出來之後覺得沒什麼，&lt;/p&gt;
&lt;p&gt;而本科系的人能從以前上述課程中的經驗去延伸，&lt;/p&gt;
&lt;p&gt;（不管是演算法或是系統相關的事情）&lt;/p&gt;
&lt;p&gt;比你更快速得到答案。&lt;/p&gt;
&lt;p&gt;畢竟，人家花了那麼多時間了解電腦，&lt;/p&gt;
&lt;p&gt;你如果不是天縱英才，要比他們理解電腦就得更努力跟上才行。&lt;/p&gt;
&lt;p&gt;這裏推薦一個很棒的課程，&lt;a href=&quot;http://www.nand2tetris.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nand2tetris&lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;上面有很詳細的指示，如果你需要影片和評分系統的話，&lt;/p&gt;
&lt;p&gt;coursera 上也有開課了:&lt;a href=&quot;https://www.coursera.org/course/nand2tetris1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.coursera.org/course/nand2tetris1&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;這門課會從最基本的 nand(not and) 邏輯閘開始講起，&lt;/p&gt;
&lt;p&gt;用模擬器組合出自己的 CPU、記憶體，定義自己的組合語言，&lt;/p&gt;
&lt;p&gt;用習慣的程式語言寫出組譯器，&lt;/p&gt;
&lt;p&gt;再寫出一個超簡易版的 JVM，最後用一個簡化過後的 Java 語言（真的超簡化），&lt;/p&gt;
&lt;p&gt;寫出一個俄羅斯方塊來。&lt;/p&gt;
&lt;p&gt;整台電腦、軟體，都是由你一手寫出來的，不覺得很熱血嗎？&lt;/p&gt;
&lt;p&gt;而且你終於也能夠看懂這張圖的笑點在哪了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/3oEdv6pGyOH00ZiRH2/giphy.gif&quot; alt=&quot;gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;當然，如果你在學習途中發現你對系統的東西很有興趣，&lt;/p&gt;
&lt;p&gt;那也恭喜你發現新天地啦！&lt;/p&gt;
&lt;p&gt;想當初為了所謂堅實的基礎，還跑去圖書館借白算盤來啃，&lt;/p&gt;
&lt;p&gt;那又是另一個故事了。&lt;/p&gt;
&lt;p&gt;總結一下這一段，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前端工程師也是軟體工程師&lt;/strong&gt;，&lt;/p&gt;
&lt;p&gt;對電腦一無所知的人寫出來的軟體，你敢用嗎？&lt;/p&gt;
&lt;p&gt;我認為至少玩過一輪 nand2tetris 對於非本科系的人會相當有幫助，&lt;/p&gt;
&lt;p&gt;本科系的人來寫前端確實是有一點優勢在，&lt;/p&gt;
&lt;p&gt;但這不是認輸的藉口，&lt;/p&gt;
&lt;p&gt;而是你必須比別人更努力找方法變強的原因。&lt;/p&gt;
&lt;p&gt;另外，&lt;/p&gt;
&lt;p&gt;千萬不要以為念研究所的人是只會讀書的書呆子，&lt;/p&gt;
&lt;p&gt;比你聰明、比你努力，又比你勇敢的人永遠都多的是。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;2-從哪裡開始學習？&quot;&gt;&lt;a href=&quot;#2-從哪裡開始學習？&quot; class=&quot;headerlink&quot; title=&quot;2. 從哪裡開始學習？&quot;&gt;&lt;/a&gt;2. 從哪裡開始學習？&lt;/h2&gt;&lt;p&gt;先來說說「單純」的前端從哪裡開始，&lt;/p&gt;
&lt;p&gt;主要分成兩塊：&lt;/p&gt;
&lt;p&gt;第一塊是 html 和 CSS：&lt;/p&gt;
&lt;p&gt;我以前學習 html 和 CSS 的方法就是把 &lt;a href=&quot;http://www.w3schools.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3schools&lt;/a&gt;看完，&lt;/p&gt;
&lt;p&gt;不能說有什麼不好，不過真的是看完大部分都忘記，&lt;/p&gt;
&lt;p&gt;畢竟很多東西都馬是要用到的時候再去查。&lt;/p&gt;
&lt;p&gt;但現在我會推薦 &lt;a href=&quot;https://www.codecademy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;codecademy&lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;邊寫點東西邊學絕對是很有效的學習方式。&lt;/p&gt;
&lt;p&gt;而學會基礎後，&lt;/p&gt;
&lt;p&gt;要怎麼設計出好維護又乾淨的 html and CSS 那又是另一個很長的故事。&lt;/p&gt;
&lt;p&gt;第二塊則是 JavaScript：&lt;/p&gt;
&lt;p&gt;坦白說一年半過去，我仍然認為自己在 JavaScript 的知識上很貧瘠。&lt;/p&gt;
&lt;p&gt;這裏有篇 &lt;a href=&quot;https://medium.com/javascript-scene/10-interview-questions-every-javascript-developer-should-know-6fa6bdf5ad95#.k5wxhl2s1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;10 個面試時應該要知道的問題&lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;可以探一下自己到底對 JavaScript 理解多少。&lt;/p&gt;
&lt;p&gt;這裏如果把教學全部列出來，真的是完全列不完，&lt;/p&gt;
&lt;p&gt;但學習的流程是這樣子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;掌握了基礎的語法和原則&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;實作練習&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;回頭研究基礎再繼續實作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重複以上循環不斷的把你的武器磨的更亮&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至於掌握基礎的語法，你可以到以下任一網站，&lt;/p&gt;
&lt;p&gt;挑一個你喜歡的，上完基礎 JavaScript 課程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://teamtreehouse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tree house&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.codeschool.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;codeschool&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://egghead.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;egghead.io&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;練習一段時間後，你會發現又有好多新工具冒出來了，&lt;/p&gt;
&lt;p&gt;這時候你可以先辦個 github 帳號，&lt;/p&gt;
&lt;p&gt;首先 watch awesome 這個 repo: &lt;a href=&quot;https://github.com/sindresorhus/awesome&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/sindresorhus/awesome &lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;看一下你喜歡的領域有沒有什麼好東西，&lt;/p&gt;
&lt;p&gt;再挑幾個你最有興趣的 repo 按下 watch，&lt;/p&gt;
&lt;p&gt;最後再開始訂閱各大框架或社群的 weekly，&lt;/p&gt;
&lt;p&gt;接著就是準備被源源不絕的資訊轟炸、不斷的學習和升級。&lt;/p&gt;
&lt;p&gt;而值得一提的是， JavaScript 有很多工具可以用，&lt;/p&gt;
&lt;p&gt;不管是 library 還是 framework，&lt;/p&gt;
&lt;p&gt;學習之前，真的必須想一想：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;「你真的需要用它嗎？」&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;舉例來說：&lt;/p&gt;
&lt;p&gt;React 的確相當的好用，&lt;/p&gt;
&lt;p&gt;但是你的畫面真的有那麼多 state 要處理嗎？&lt;/p&gt;
&lt;p&gt;有些人簡單的認為 SPA(Single Page Application)就要用 React，&lt;/p&gt;
&lt;p&gt;我得說不一定，假如根本沒有那麼複雜，&lt;/p&gt;
&lt;p&gt;也許你只是需要一個 template engine 而已，&lt;/p&gt;
&lt;p&gt;而把 React 當作 html 的 template 來用，&lt;/p&gt;
&lt;p&gt;實在是有點太小看它了。&lt;/p&gt;
&lt;p&gt;什麼時候該用 React 或是 React 到底好在哪裏，&lt;/p&gt;
&lt;p&gt;這個議題其實已經超出了本篇文章的範圍，&lt;/p&gt;
&lt;p&gt;有興趣的可以看這篇：&lt;a href=&quot;https://medium.com/@dan_abramov/react-components-elements-and-instances-90800811f8ca&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Components, Elements, and Instances by Dan Abramov(Redux 作者)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這也是為什麼我一直遲遲沒有碰 Angular 的原因，&lt;/p&gt;
&lt;p&gt;（因為我還沒遇過複雜到需要用到它的情境）&lt;/p&gt;
&lt;p&gt;但我認為在選擇前端的框架時，這篇文章很值得一看再看：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/livoras/blog/issues/11&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;界面之下：還原真實的MV*模式 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;裡面並沒有太多的程式碼，只有比較 high level 的概念，&lt;/p&gt;
&lt;p&gt;但看完你會比較理解別人說 MVC、MVP、MVVM、Model 2 是在說些什麼，&lt;/p&gt;
&lt;p&gt;前端主要工作之一就是處理使用者介面（UI），&lt;/p&gt;
&lt;p&gt;我認為理解這些模式是一個前端工程師必備的 common sense，&lt;/p&gt;
&lt;p&gt;這些概念比起淘汰迅速的工具們，是比較能夠保值的，&lt;/p&gt;
&lt;p&gt;並且也會漸漸影響你挑選工具的眼光。&lt;/p&gt;
&lt;p&gt;而 medium 上也有許多好文章可以看，&lt;/p&gt;
&lt;p&gt;twitter 上面也有很多大神可以讓你追蹤，&lt;/p&gt;
&lt;p&gt;不要把這些事情當作是在大拜拜，&lt;/p&gt;
&lt;p&gt;覺得追蹤越多人自己越屌，&lt;/p&gt;
&lt;p&gt;重要的是你看他們生產的內容時得到了什麼。&lt;/p&gt;
&lt;p&gt;另外臉書上的前端社團也很值得加入，台灣人的軟體能力是很強悍的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/groups/f2e.tw/?fref=ts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Front-End Developers Taiwan&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/groups/augularjs.tw/?fref=ts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AngularJS.tw&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/groups/reactjs.tw/?fref=ts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactJS.tw&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/groups/javascript.tw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript.tw&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重要的是在上面發問，也會有人很熱心的回答你。&lt;/p&gt;
&lt;p&gt;假如這樣都還是讓你資訊焦慮，可以開始訂閱一些技術週刊，&lt;/p&gt;
&lt;p&gt;像是&lt;a href=&quot;http://weekly.codetengu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;碼天狗&lt;/a&gt;、&lt;a href=&quot;http://weekly.techbridge.cc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TechBridge&lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;讓 curators 來幫你整理一些技術上的新知。&lt;/p&gt;
&lt;p&gt;已經盡量精簡了資訊來源，希望能讓新手們不要太無所適從。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;3-前端工程師該懂後端嗎？&quot;&gt;&lt;a href=&quot;#3-前端工程師該懂後端嗎？&quot; class=&quot;headerlink&quot; title=&quot;3. 前端工程師該懂後端嗎？&quot;&gt;&lt;/a&gt;3. 前端工程師該懂後端嗎？&lt;/h2&gt;&lt;p&gt;後端跟前端是完全不一樣的專業，&lt;/p&gt;
&lt;p&gt;有人說 Node.js 能讓前端工程師跨足到後端去。&lt;/p&gt;
&lt;p&gt;(Isomorphic？)&lt;/p&gt;
&lt;p&gt;事實上前端工程師想往後端走還是有許多需要學習的，&lt;/p&gt;
&lt;p&gt;不管是資料庫或是系統面，都不是平常前端會碰觸到的領域，&lt;/p&gt;
&lt;p&gt;認為自己會寫 JavaScript 就硬上的下場通常是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;效能有問題&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;資安有問題&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;整個 server-side 的 code 都他媽很有問題&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;聽起來是很糟糕的事情，所以請千萬尊重專業，&lt;/p&gt;
&lt;p&gt;讓我們前端歸前端、政治歸政治（欸？）。&lt;/p&gt;
&lt;p&gt;那前端到底要理解後端到怎樣的程度呢？&lt;/p&gt;
&lt;p&gt;這是一個很 tricky 的問題，&lt;/p&gt;
&lt;p&gt;大部份人會說：&lt;strong&gt;「至少要會接資料啦！」&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但要學到會接資料揪竟是需要怎樣的能力呢？&lt;/p&gt;
&lt;p&gt;真的有人學到剛剛好就喊停的嗎？&lt;/p&gt;
&lt;p&gt;最好的方法其實就是自己去玩一套網頁框架，&lt;/p&gt;
&lt;p&gt;後端前端都寫一遍。&lt;/p&gt;
&lt;p&gt;Rails, Laravel, Django 都是我認為不錯的選擇，&lt;/p&gt;
&lt;p&gt;（Koa 也很不錯啦……）&lt;/p&gt;
&lt;p&gt;重點是去感受一下自己要怎樣設計 DB 的 Schema，&lt;/p&gt;
&lt;p&gt;怎樣做正規化、怎樣避免 N+1 Query，&lt;/p&gt;
&lt;p&gt;以及整個框架的架構為什麼要這樣設計，&lt;/p&gt;
&lt;p&gt;最後再跟自己拉的頁面整合在一起，然後部署上去，&lt;/p&gt;
&lt;p&gt;（用 heroku 是有點偷懶，不過如果你對 server 真的沒興趣，還是可以考慮這樣做沒差）&lt;/p&gt;
&lt;p&gt;等做到這一步，「至少要會接資料」這一點，&lt;/p&gt;
&lt;p&gt;早就迎刃而解了。&lt;/p&gt;
&lt;p&gt;對了，&lt;/p&gt;
&lt;p&gt;記得也不要因為自己寫過後端的 code 就說自己是 full-stack，&lt;/p&gt;
&lt;p&gt;這就跟你會收發 email 就說自己懂電腦一樣會被笑。&lt;/p&gt;
&lt;p&gt;(IT crowd 真的是個不錯的影集)&lt;/p&gt;
&lt;p&gt;有興趣可以看看這篇：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/nodejs-in-front-end-engineer-view&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一個前端工程師眼中的 Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以略懂 Async 在 server 端和 client 端的差異。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;目前大概走到這裡，還有很多沒說到，&lt;/p&gt;
&lt;p&gt;但學個基礎開始實作後就能體會到許多了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;至於實作，&lt;/p&gt;
&lt;p&gt;可以選擇自己寫個身體健康、參與 open source，&lt;/p&gt;
&lt;p&gt;或是去實習都是非常好的選擇&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不管是 RWD、mobile web、跨瀏覽器的處理、SEO，&lt;/p&gt;
&lt;p&gt;動畫該用 CSS3 或是 JavaScript 還是 SVG？&lt;/p&gt;
&lt;p&gt;每天都有新的問題可以鑽研，&lt;/p&gt;
&lt;p&gt;目前就先寫到這裡啦！&lt;/p&gt;
&lt;p&gt;希望可以改變一些覺得前端工程師只是在切切版的想法，&lt;/p&gt;
&lt;p&gt;也希望能幫助到想往前端工程師邁進的人。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;「這個畫面幫我稍微調一下應該沒有很難吧？」&lt;/p&gt;
    
    </summary>
    
    
      <category term="career" scheme="http://abalone0204.github.com/tags/career/"/>
    
      <category term="front-end" scheme="http://abalone0204.github.com/tags/front-end/"/>
    
  </entry>
  
  <entry>
    <title>CSS Modules: 模組化 CSS</title>
    <link href="http://abalone0204.github.com/2016/01/09/css-modules/"/>
    <id>http://abalone0204.github.com/2016/01/09/css-modules/</id>
    <published>2016-01-09T00:00:00.000Z</published>
    <updated>2016-04-24T17:01:39.030Z</updated>
    
    <content type="html">&lt;p&gt;時至今日，我最討厭的東西就是亂七八糟的 CSS 還有 KMT，&lt;/p&gt;
&lt;p&gt;這兩個東西有一點很一致：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不管我們再怎麼討厭它，&lt;br&gt;都還是得面對它、處理它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;先說結論：&quot;&gt;&lt;a href=&quot;#先說結論：&quot; class=&quot;headerlink&quot; title=&quot;先說結論：&quot;&gt;&lt;/a&gt;先說結論：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果討厭寫 CSS，就更應該用這種方式來寫&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我們應該用 module 化的方式來思考每個畫面上的東西&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;讓需要「工人智慧」的地方減到最少&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;「如果你覺得 CSS 很亂的話，那代表你心中沒有架構。」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Prerequisite&quot;&gt;&lt;a href=&quot;#Prerequisite&quot; class=&quot;headerlink&quot; title=&quot;Prerequisite&quot;&gt;&lt;/a&gt;Prerequisite&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;會使用 webpack（幾乎只要會改 config 就行了）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把 CSS 當一回事的人&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;為什麼需要去思考-CSS-的「架構」？&quot;&gt;&lt;a href=&quot;#為什麼需要去思考-CSS-的「架構」？&quot; class=&quot;headerlink&quot; title=&quot;為什麼需要去思考 CSS 的「架構」？&quot;&gt;&lt;/a&gt;為什麼需要去思考 CSS 的「架構」？&lt;/h2&gt;&lt;p&gt;曾幾何時，我也覺得 CSS 是一個他媽有夠亂七八糟的東西，&lt;/p&gt;
&lt;p&gt;直到不小心開始寫前端，我才發現前端不只是 JavaScript，&lt;/p&gt;
&lt;p&gt;從 CSS 到 html 的設計，都需要仔細去思考「架構」這件事，&lt;/p&gt;
&lt;p&gt;否則很容易讓技術債債台高築，到最後一發不可收拾。&lt;/p&gt;
&lt;p&gt;使用起來合邏輯的東西，不代表能夠用很「邏輯化」的方式寫出來，&lt;/p&gt;
&lt;p&gt;這正是 CSS 為什麼很容易亂七八糟的原因，&lt;/p&gt;
&lt;p&gt;因為我們常常需要去指定很多畫面上的細節（imperative）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「欸欸，你這邊 width 要 300px，然後 margin 要設成 0 auto 才能置中」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而不是直觀的用程式碼來宣告我們想要畫面長怎樣（declarative）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;「我們要一個看起來不錯的畫面」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;處理太多細節很容易出錯，像是螢幕或視窗大小不一樣 300px 就不一定 ok 了，&lt;/p&gt;
&lt;p&gt;而第二個 declarative way 似乎又太過理想化。&lt;/p&gt;
&lt;p&gt;而我認為折衷的方式就是 module 化 CSS，&lt;/p&gt;
&lt;p&gt;雖然也需要去實作 module 內的細節（imperative），&lt;/p&gt;
&lt;p&gt;但完成之後，就可以將這些 module 組裝起來，&lt;/p&gt;
&lt;p&gt;重複使用時就不需要去實做那麼多的細節，&lt;/p&gt;
&lt;p&gt;沒錯，我們又往 declarative programming更進一步了。&lt;/p&gt;
&lt;p&gt;現在看起來還是比較 high level 的概念，&lt;/p&gt;
&lt;p&gt;但我認為知道為什麼要這樣做很重要，&lt;/p&gt;
&lt;p&gt;稍後會在例子裏看到這樣做的好處是什麼。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在開始之前先講解一下兩個會推薦使用的工具，&lt;/p&gt;
&lt;p&gt;（你也可以依自己喜歡的配置啦！）&lt;/p&gt;
&lt;p&gt;分別是 Autoprefixer 以及 PostCSS。&lt;/p&gt;
&lt;h2 id=&quot;Autoprefixer&quot;&gt;&lt;a href=&quot;#Autoprefixer&quot; class=&quot;headerlink&quot; title=&quot;Autoprefixer&quot;&gt;&lt;/a&gt;Autoprefixer&lt;/h2&gt;&lt;p&gt;假如熟悉 postcss 和 autoprefixer 在幹嘛的人可以直接跳下一段了。&lt;/p&gt;
&lt;p&gt;其實我們平常在寫 CSS 的時候，為了處理跨瀏覽器的問題，&lt;/p&gt;
&lt;p&gt;常常需要寫很噁心的 prefix，&lt;/p&gt;
&lt;p&gt;就算有 SASS 的 include 語法，prefix 還是很噁心。&lt;/p&gt;
&lt;p&gt;看到 autoprefixer 出現真是讓人痛哭流涕的一件事，&lt;/p&gt;
&lt;p&gt;因為這代表以後有人會幫我們處理好 prefix，&lt;/p&gt;
&lt;p&gt;同時還會把太舊的 prefix 給移除掉。（像是 &lt;code&gt;border-radius&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;這裏就直接來安裝進專案吧！&lt;/p&gt;
&lt;p&gt;&lt;code&gt;webpack.config.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; autoprefixer = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;autoprefixer&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loaders: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                test:   &lt;span class=&quot;regexp&quot;&gt;/\.css$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                loader: &lt;span class=&quot;string&quot;&gt;&quot;style-loader!css-loader!postcss-loader&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postcss: [ autoprefixer(&amp;#123; browsers: [&lt;span class=&quot;string&quot;&gt;&#39;last 2 versions&#39;&lt;/span&gt;] &amp;#125;) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;唯一需要說明一下的就是可以指定我們要 support 到多老舊的 browser啦！&lt;/p&gt;
&lt;p&gt;就這樣，恭喜你！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;PostCSS&quot;&gt;&lt;a href=&quot;#PostCSS&quot; class=&quot;headerlink&quot; title=&quot;PostCSS&quot;&gt;&lt;/a&gt;PostCSS&lt;/h2&gt;&lt;p&gt;PostCSS 是一個可以用 JavaScript plugins 將 style 轉成我們想要樣子的工具。&lt;/p&gt;
&lt;p&gt;（包括 lint, variables, mixins，以及好多東西……）&lt;/p&gt;
&lt;p&gt;確切一點來說， PostCSS 是一個 node.js 的 package，&lt;/p&gt;
&lt;p&gt;它可以將我們原本的 CSS 檔案轉成 AST(Abstraction Syntax Tree)，&lt;/p&gt;
&lt;p&gt;接著我們就可以藉由這個 API 來對 CSS 做事情，&lt;/p&gt;
&lt;p&gt;做完後再將它轉成 String，輸出成我們想要的 CSS，&lt;/p&gt;
&lt;p&gt;如果你懶得自己寫 plugin 來處理也不用擔心，&lt;/p&gt;
&lt;p&gt;現在已經有兩百多個 plugins 在那裡等你愛智求真了。&lt;/p&gt;
&lt;p&gt;我知道一定有人這時候在想：「那 SASS 呢？」&lt;/p&gt;
&lt;p&gt;沒錯，這兩者看起來似乎有點像，不過可以先看一下這篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://davidtheclark.com/excited-about-postcss/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;I’m Excited About PostCSS But I’m Scared to Leave Sass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這裏則是值得一看的補充資料，其實官方的 readme 裏也都有寫：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tut+的教學&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://nicolasgallagher.com/custom-css-preprocessing/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一個前端用 node.js 來寫 CSS 的 preprocessor 也是很正常的事&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;簡言之，PostCSS 跟 SASS 或 LESS 最不一樣的點是：&lt;/p&gt;
&lt;p&gt;「我們可以只採用我們想要的部分，並將其組裝起來。」&lt;/p&gt;
&lt;p&gt;這不就是 Compoasable 和模組化嗎？&lt;/p&gt;
&lt;p&gt;接著就來看看如何在 webpack 中設定 postcss，&lt;/p&gt;
&lt;p&gt;和使用各種 plugins。&lt;/p&gt;
&lt;p&gt;（坦白說這裏才是最頭痛的部分）&lt;/p&gt;
&lt;p&gt;使用 webpack 雖然簡單，但 config 的寫法太雜亂了，&lt;/p&gt;
&lt;p&gt;完成同樣一件事可以有好幾種方法，&lt;/p&gt;
&lt;p&gt;目前連官方文件上也沒有一個一致的 best practice。&lt;/p&gt;
&lt;p&gt;而&lt;a href=&quot;https://github.com/ruanyf/webpack-demos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮義峰的這篇教學&lt;/a&gt;是我目前看過寫的最清楚易懂的，&lt;/p&gt;
&lt;p&gt;從 entry 到跟 react 一起使用都有說到。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;CSS-modules&quot;&gt;&lt;a href=&quot;#CSS-modules&quot; class=&quot;headerlink&quot; title=&quot;CSS modules&quot;&gt;&lt;/a&gt;CSS modules&lt;/h2&gt;&lt;p&gt;假如你直接跳過前兩個工具，其實也是 ok 啦！&lt;/p&gt;
&lt;p&gt;因為 webpack 的 css-loader 本身就內建 module 功能：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loaders: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            test: &lt;span class=&quot;regexp&quot;&gt;/\.[s]?css$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            loader: &lt;span class=&quot;string&quot;&gt;&#39;style!css?modules!sass&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;現在終於要來講一下 CSS modules 可以做到什麼事情。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;組合（Composition）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我們能夠將 selector 組合在一起&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.className&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.otherClassName&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;composes&lt;/span&gt;: className;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: yellow;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏要注意的是 composes 必須寫在其他 properties 的前面。&lt;/p&gt;
&lt;p&gt;而我們也可以 compose 多個 className：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;composes: classNameA classNameB;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;乍看之下跟 SASS 的 extend 有點像，&lt;/p&gt;
&lt;p&gt;但讓我們繼續看下去。&lt;/p&gt;
&lt;h2 id=&quot;Dependencies&quot;&gt;&lt;a href=&quot;#Dependencies&quot; class=&quot;headerlink&quot; title=&quot;Dependencies&quot;&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;&lt;p&gt;假設我們現在有另一個檔案: style.css&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.className &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // some style&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.otherClassName&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;composes&lt;/span&gt;: className from &lt;span class=&quot;string&quot;&gt;&quot;./style.css&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這給了我們很大的彈性，但小心不要 override properties，&lt;/p&gt;
&lt;p&gt;我覺得官方文件的這一句話寫得很棒：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Best if classes do a single thing and dependencies are hierarchic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這的確是我們在設計 CSS module 時，要常存心中的一句話。&lt;/p&gt;
&lt;h2 id=&quot;Usage-with-preprocessors&quot;&gt;&lt;a href=&quot;#Usage-with-preprocessors&quot; class=&quot;headerlink&quot; title=&quot;Usage with preprocessors&quot;&gt;&lt;/a&gt;Usage with preprocessors&lt;/h2&gt;&lt;p&gt;這裏主要是說要如何運用 preprocessor ，&lt;/p&gt;
&lt;p&gt;因為我們有時候還是需要 global 的 class。&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:global&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-class&quot;&gt;.global-class-name&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Rewrite-with-CSS-Modules&quot;&gt;&lt;a href=&quot;#Rewrite-with-CSS-Modules&quot; class=&quot;headerlink&quot; title=&quot;Rewrite with CSS Modules&quot;&gt;&lt;/a&gt;Rewrite with CSS Modules&lt;/h2&gt;&lt;p&gt;如果你是打從專案一開始就使用 css module ，&lt;/p&gt;
&lt;p&gt;那恭喜你！&lt;/p&gt;
&lt;p&gt;但「通常」現有的專案上都是用 SASS 來解決，&lt;/p&gt;
&lt;p&gt;這裡就以我工作上的專案來做例子。&lt;/p&gt;
&lt;p&gt;這裏要提一下我們後端用的是 Rails，&lt;/p&gt;
&lt;p&gt;Rails 有個邪惡的好東西叫做 &lt;a href=&quot;https://ihower.tw/rails4/assets-pipeline.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Asset Pipeline&lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;它會將靜態資源壓成一個檔案，減少 request 數。&lt;/p&gt;
&lt;p&gt;自動幫你做這件事聽起來很美好，&lt;/p&gt;
&lt;p&gt;但實際上因為 css 有 global scope 的問題，&lt;/p&gt;
&lt;p&gt;所以要怎麼確保每一頁只 load 到自己要的 style 呢？&lt;/p&gt;
&lt;p&gt;我的做法是每一頁會有一個專屬的 id，&lt;/p&gt;
&lt;p&gt;而命名的方式就是以 controller 加上 action 的名稱來命名。&lt;/p&gt;
&lt;p&gt;像是 posts_controller 的首頁，&lt;/p&gt;
&lt;p&gt;我就會給它專屬的一支檔案&lt;code&gt;posts_index.scss&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#posts_index &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // some style&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這樣做的第一個好處很明顯，&lt;/p&gt;
&lt;p&gt;就是每個頁面裡的樣式就只會影響 id 裡的 scope。&lt;/p&gt;
&lt;p&gt;那說好的 module 呢？&lt;/p&gt;
&lt;p&gt;這裏就要用到 SASS 的 &lt;code&gt;extend&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;假設 posts 和 show 都有一模一樣的 header，&lt;/p&gt;
&lt;p&gt;這時候我就會把 header 抽出來像下面這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;%header &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    header &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //  some style&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import &quot;./header.scss&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#posts_index &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @extend %header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // some style&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import &quot;./header.scss&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#posts_show &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @extend %header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // some style&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看起來挺方便，&lt;/p&gt;
&lt;p&gt;而且 Rails 的 routing 通常都是 restful 的，&lt;/p&gt;
&lt;p&gt;所以理論上這樣 CSS 的名字也有一定的規則可循，&lt;/p&gt;
&lt;p&gt;不會找不到檔案在哪裡。&lt;/p&gt;
&lt;p&gt;（就算有自動搜尋，也要知道下哪些關鍵字吧！）&lt;/p&gt;
&lt;p&gt;但，&lt;/p&gt;
&lt;p&gt;如果今天根據 user 的身份不同，&lt;/p&gt;
&lt;p&gt;會 render 不一樣的頁面呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#posts_index_super_user&lt;/code&gt;？&lt;/p&gt;
&lt;p&gt;沒錯，問題又變得開始複雜起來，&lt;/p&gt;
&lt;p&gt;原因就出在它仍然是 global scope，&lt;/p&gt;
&lt;p&gt;而我試圖想從命名來解決這件事情，&lt;/p&gt;
&lt;p&gt;我常常在想：「啊！如果 CSS 是 local scope該有多好？」&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A CSS Module is a CSS file in which all class names and animation names are scoped locally by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;天啊！這解決了根本上的問題！&lt;/p&gt;
&lt;p&gt;假如能夠用 component-based 的方式來思考，&lt;/p&gt;
&lt;p&gt;讓 react component 從 css module 之間有對應的 name 來讀取樣式，&lt;/p&gt;
&lt;p&gt;那不就更棒了嗎？&lt;/p&gt;
&lt;p&gt;以後的資料夾結構會長這樣子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;├── components&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── ui-App&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── index.css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   ├── ui-Avatar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   ├── index.css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   │   └── index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│   └── ui-Profile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── fonts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       │   └── opensans-regular-webfont.woff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── images&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       │   └── icon-user.png&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       ├── index.css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│       └── index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── styles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── base.css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── theme.css&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一個資料夾底下就放著 component.js, component.css，&lt;/p&gt;
&lt;p&gt;本身就是一個 micro-service，&lt;/p&gt;
&lt;p&gt;而我們要做的正是把這些 micro-service 給組裝起來變成一個頁面，&lt;/p&gt;
&lt;p&gt;最後再把這些頁面組裝起來變成 Application，相當舒服。&lt;/p&gt;
&lt;p&gt;不過要如何從現有的專案改寫呢？&lt;/p&gt;
&lt;p&gt;這裏就拿這個小小的部落格來舉例，&lt;/p&gt;
&lt;p&gt;因為我一開始是用&lt;a href=&quot;https://github.com/abalone0204/generator-suku&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自己寫的 generator&lt;/a&gt; 生成專案，&lt;/p&gt;
&lt;p&gt;（小打一下廣告，&lt;/p&gt;
&lt;p&gt;平常開發前端 component 就是在這個生成的專案上開發，&lt;/p&gt;
&lt;p&gt;弄好 react 和 hmr 之後，其實蠻方便的。）&lt;/p&gt;
&lt;p&gt;順帶一提，這是開始改寫前的樣子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;stylesheets/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── animations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── blink.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── loading.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── spins.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── code_highlights&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── default.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── colors.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── components&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── Nav&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   │   └── _icon_bar.css&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── common&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │       └── loading.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── nav.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── pages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── about.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   ├── home.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── post.scss&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── style.scss&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到最後 stylesheets 裡面只會剩下 global 的 css 檔案，&lt;/p&gt;
&lt;p&gt;像是 base.css 或是 theme.css 。&lt;/p&gt;
&lt;p&gt;首先第一步當然就是處理 global 的 css，&lt;/p&gt;
&lt;p&gt;思考的方向很簡單，就是哪些東西是每一個頁面都用得到的呢？&lt;/p&gt;
&lt;p&gt;所以我們把 body, a, h1~h5之類的東西先拔出來：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:global &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: inherit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text-decoration: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        letter-spacing: 1px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: #23263a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        font-family: &#39;Noto Sans TC&#39;,Microsoft JhengHei,Microsoft YaHei, LiHei Pro, Heiti TC, sans-serif;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        font-weight: 200;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .wf-loading &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        * &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            font-family: Microsoft JhengHei, Microsoft YaHei, LiHei Pro, Heiti TC, sans-serif;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        font-family: Microsoft JhengHei, Microsoft YaHei, LiHei Pro, Heiti TC, sans-serif;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接著來處理我們的 Nav bar，&lt;/p&gt;
&lt;p&gt;從這裡開始，就要進入 module 化的思考方式，&lt;/p&gt;
&lt;p&gt;一開始的時候你可能會覺得，欸？幹嘛這樣做？&lt;/p&gt;
&lt;p&gt;但越到後面你會發現一旦你習慣這樣思考，&lt;/p&gt;
&lt;p&gt;很多原本難解的問題都會迎刃而解，&lt;/p&gt;
&lt;p&gt;尤其是用組裝的方式來思考畫面的元件，&lt;/p&gt;
&lt;p&gt;能讓多狀態的呈現變得更簡單，&lt;/p&gt;
&lt;p&gt;也更能明白哪個部分該抽象化出來變成 base。&lt;/p&gt;
&lt;p&gt;先來看看這個 Nav 的例子。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;預計會在以下幾個步驟循序漸進地去思考如何去寫 CSS Modules：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;讀一下舊有的 js, css&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最外層的 global selector&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;沒有狀態改變的 local selector&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有狀態改變的 local selector&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-分析舊有的-js-css&quot;&gt;&lt;a href=&quot;#1-分析舊有的-js-css&quot; class=&quot;headerlink&quot; title=&quot;1. 分析舊有的 js, css&quot;&gt;&lt;/a&gt;1. 分析舊有的 js, css&lt;/h3&gt;&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Container&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;(props) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(props);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state = &amp;#123;show: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.toggleIcon = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.toggleIcon.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    toggleIcon() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState(&amp;#123;show: !&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.show&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &amp;#123;show&amp;#125; = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; className = show ? &lt;span class=&quot;string&quot;&gt;&quot;active&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;nav&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;div id=&quot;logo&quot; className=&amp;#123;className&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;div id=&quot;toggle_icon&quot; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     className=&amp;#123;className&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     onClick=&amp;#123;this.toggleIcon&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    show ? &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;ul id=&quot;nav_list&quot; className=&amp;#123;className&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;lt;li&amp;gt;&amp;lt;Link to=&quot;/about&quot;&amp;gt;About&amp;lt;/Link&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;lt;li&amp;gt;&amp;lt;i className=&quot;fa fa-github-alt&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;lt;li&amp;gt;&amp;lt;i className=&quot;fa fa-facebook&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ) :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/nav&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到我們的 toggle_icon 會隨著 show 的值而改變樣式，&lt;/p&gt;
&lt;p&gt;至於怎樣改變？就來看看原先架構下的 CSS 怎麼寫。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@import &quot;./colors.scss&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@import &quot;./components/Nav/icon_bar&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nav &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    position: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    z-index: 5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    top: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 100%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    color: white;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    background: $deep_blue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    padding: 14px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 28px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: inherit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text-decoration: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #logo &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height: 28px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width: 28px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background-image: url(&quot;../img/icon.png&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background-size: cover;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transition: transform 1s ease;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:hover &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            animation: shake;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #logo.active &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: $sudo_green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #toggle_icon &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        top: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transform: translateY(-50%);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        right: 50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @extend %icon_bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cursor: pointer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:before,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @extend %icon_bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            content: &#39;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:before &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            margin-top: -10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            margin-top: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #toggle_icon.active &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: transparent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transition-property: background-color, transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transition-duration: .2s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:before, &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            background: $sudo_green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transition-property: background-color, transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transition-duration: .2s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:before &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transform: rotate(45deg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transform-origin: 0 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transform: rotate(-45deg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            transform-origin: 0 5px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #nav_list &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height: 100vh;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: #23263a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        text-align: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        top: 56px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        padding: 5px 15px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        li &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            padding: 5px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;2-最外層的-global-selector&quot;&gt;&lt;a href=&quot;#2-最外層的-global-selector&quot; class=&quot;headerlink&quot; title=&quot;2. 最外層的 global selector&quot;&gt;&lt;/a&gt;2. 最外層的 global selector&lt;/h2&gt;&lt;p&gt;如果你有寫過 react native 的話，&lt;/p&gt;
&lt;p&gt;就能體會到 style object 的好處，&lt;/p&gt;
&lt;p&gt;假如沒有，那現在這是好好來玩玩看的時候。&lt;/p&gt;
&lt;p&gt;我們從最外層開始拆解。&lt;/p&gt;
&lt;p&gt;（其實由內而外、由外而內各有好壞，但這可能又要寫另外一篇了）&lt;/p&gt;
&lt;p&gt;最外層的當然就是原生的 nav tag，&lt;/p&gt;
&lt;p&gt;這裏其實大可直接給他 global&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;:global &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nav &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        z-index: 5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        top: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width: 100%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: white;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: #23263a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        padding: 14px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height: 28px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;3-沒有狀態改變的-local-selector&quot;&gt;&lt;a href=&quot;#3-沒有狀態改變的-local-selector&quot; class=&quot;headerlink&quot; title=&quot;3. 沒有狀態改變的 local selector&quot;&gt;&lt;/a&gt;3. 沒有狀態改變的 local selector&lt;/h2&gt;&lt;p&gt;往下看到 logo ：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.logo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;28px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;28px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-image&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;../../../static/img/icon.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-size&lt;/span&gt;: cover;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要怎麼 import 它呢？&lt;/p&gt;
&lt;p&gt;首先別忘記在 webpack 的 config 裡開啟 css modules 的功能。&lt;/p&gt;
&lt;p&gt;再來只要這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; style &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;./Nav.scss&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Nav&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ( &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;div className=&amp;#123;style.logo&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;style.logo&lt;/code&gt; 讀到的就會是 webpack 幫我們生成的唯一字串，&lt;/p&gt;
&lt;p&gt;不用擔心會跟其他 class 重複，不相信的話 console.log 看一下，&lt;/p&gt;
&lt;p&gt;而跟以往相同，webpack 也會自動去幫我們寫入 style 到 head 裡面，&lt;/p&gt;
&lt;p&gt;對應到的 class name 就是剛剛生成的唯一字串。&lt;/p&gt;
&lt;p&gt;原理大概是這樣子。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4-有狀態改變的-local-selector&quot;&gt;&lt;a href=&quot;#4-有狀態改變的-local-selector&quot; class=&quot;headerlink&quot; title=&quot;4. 有狀態改變的 local selector&quot;&gt;&lt;/a&gt;4. 有狀態改變的 local selector&lt;/h3&gt;&lt;p&gt;再來則是為什麼我仍然使用 SASS 的原因： extend&lt;/p&gt;
&lt;p&gt;來看看 toggle_icon，他就是我們平常看到手機版的選單，&lt;/p&gt;
&lt;p&gt;按了之後會變形。&lt;/p&gt;
&lt;p&gt;先直接看它原本的 CSS 長怎樣：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#toggle_icon &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    top: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transform: translateY(-50%);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    right: 50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @extend %icon_bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cursor: pointer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:before,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @extend %icon_bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content: &#39;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:before &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin-top: -10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin-top: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;我知道有一些 PostCSS 的插件可以解決，&lt;br&gt;但這篇的重點在於模組化 CSS 的思考，所以就暫時先擱著啦！）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因為那個 icon 有三個橫條，每個橫條的設定都差不多，&lt;/p&gt;
&lt;p&gt;所以我寫了一個 icon_bar 來被 extend。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;%&lt;span class=&quot;selector-tag&quot;&gt;icon_bar&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transition-property&lt;/span&gt;: background-color, transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transition-duration&lt;/span&gt;: .&lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接著則是重頭戲，&lt;/p&gt;
&lt;p&gt;對於畫面來說，這個 toggle_icon 會有兩個狀態，&lt;/p&gt;
&lt;p&gt;也就是說我們會有兩個 class 來處理它，&lt;/p&gt;
&lt;p&gt;但這兩個狀態又有許多共同點，怎麼辦呢？&lt;/p&gt;
&lt;p&gt;答案很簡單：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抽出來當 base，讓兩個狀態的 class 去 composes 這個 base 就好啦！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.toggle_icon_base &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @extend %icon_bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    top: 50%;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transform: translateY(-50%);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    right: 50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cursor: pointer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transition-property: background-color, transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    transition-duration: .2s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:before,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // pseudo-selector 是不能使用 composes 的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 這就是為什麼我仍需要 @extend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @extend %icon_bar; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content: &#39;&#39;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:before &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin-top: -10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin-top: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這裏抽出來的就是兩方都不會變的 properties，&lt;/p&gt;
&lt;p&gt;把 transition 放在 base 裏的好處就是能看到狀態之間的變化，&lt;/p&gt;
&lt;p&gt;這樣能實現一些簡單的動畫。&lt;/p&gt;
&lt;p&gt;接著就是把我們寫好的 base 組裝起來而已，&lt;/p&gt;
&lt;p&gt;toggle_icon！附身合體！&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.toggle_icon &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    composes: toggle_icon_base; // 記得要放在其他 properties 前面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    background-color: white;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:before,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background-color: white;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:hover &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background-color: #50e2c2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:before,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            background-color: #50e2c2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;狀態的改變每個人都有自己喜好的方式，可以自行調整：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.toggle_icon--active &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    composes: toggle_icon_base;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    background: transparent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:before, &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background: #50e2c2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transition-property: background-color, transform;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transition-duration: .2s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:before &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transform: rotate(45deg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transform-origin: 0 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;:after &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transform: rotate(-45deg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transform-origin: 0 5px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而 component 中該如何對應呢？&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Nav&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div className=&amp;#123;show ? style[&lt;span class=&quot;string&quot;&gt;&quot;toggle_icon--active&quot;&lt;/span&gt;] : style.toggle_icon&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              onClick=&amp;#123;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.toggleIcon&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;沒錯，就是這麼簡單而已。&lt;/p&gt;
&lt;h1 id=&quot;結論&quot;&gt;&lt;a href=&quot;#結論&quot; class=&quot;headerlink&quot; title=&quot;結論&quot;&gt;&lt;/a&gt;結論&lt;/h1&gt;&lt;p&gt;回頭看看重構後的 CSS，&lt;/p&gt;
&lt;p&gt;你會發現我們已經不是昔日把所有東西都丟在越來越多層的 class 裡面，&lt;/p&gt;
&lt;p&gt;而是變成扁平且一塊一塊的了，&lt;/p&gt;
&lt;p&gt;如果要重構的話我們也能夠將重複的部分抽出來。&lt;/p&gt;
&lt;p&gt;再來更棒的是除了 global 的地方，&lt;/p&gt;
&lt;p&gt;我們不用再擔心全域命名污染的問題，&lt;/p&gt;
&lt;p&gt;畢竟沒有 import 到的 class 就永遠不會發生作用啊！&lt;/p&gt;
&lt;p&gt;如果有寫錯的地方或是建議，很歡迎留言告訴我。&lt;/p&gt;
&lt;p&gt;我真的最討厭寫 CSS 了。&lt;/p&gt;
&lt;h2 id=&quot;參考連結：&quot;&gt;&lt;a href=&quot;#參考連結：&quot; class=&quot;headerlink&quot; title=&quot;參考連結：&quot;&gt;&lt;/a&gt;參考連結：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/css-modules/css-modules&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;css module&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/postcss/autoprefixer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;autoprefixer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://simonsmith.io/using-webpack-to-build-react-components-and-their-assets/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Using webpack to build React components and their assets&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;時至今日，我最討厭的東西就是亂七八糟的 CSS 還有 KMT，&lt;/p&gt;
&lt;p&gt;這兩個東西有一點很一致：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不管我們再怎麼討厭它，&lt;br&gt;都還是得面對它、處理它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;先說結論：&quot;&gt;&lt;a h
    
    </summary>
    
    
      <category term="CSS Modules, PostCSS" scheme="http://abalone0204.github.com/tags/CSS-Modules-PostCSS/"/>
    
  </entry>
  
  <entry>
    <title>自動化發布</title>
    <link href="http://abalone0204.github.com/2016/01/06/auto-release/"/>
    <id>http://abalone0204.github.com/2016/01/06/auto-release/</id>
    <published>2016-01-06T00:00:00.000Z</published>
    <updated>2016-04-24T17:01:39.030Z</updated>
    
    <content type="html">&lt;p&gt;運用 npm 上的套件來做個簡單的 CI，&lt;/p&gt;
&lt;p&gt;對自己用的小工具庫或 side project 而言，&lt;/p&gt;
&lt;p&gt;都是很爽的事情。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Test.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;mocha, chai&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;先測試&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Semantic release&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; semainti-release-cli setup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? Is the GitHub repository private? No&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? What is your npm registry? https://registry.npmjs.org/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? What is your npm username? tjku&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? What is your npm email? abalone0204@gmail.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? What is your GitHub username? abalone0204&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? What CI are you using? Travis CI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;? What kind of `.travis.yml` &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; you want? Single Node.js version.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接著會新增數個檔案和變更 package.json 以及新增 travis.yml&lt;/p&gt;
&lt;p&gt;package.json 中的 version 被拿掉了，&lt;/p&gt;
&lt;p&gt;如果我們要用 npm install 東西的話，&lt;/p&gt;
&lt;p&gt;這樣會噴錯。&lt;/p&gt;
&lt;p&gt;所以我們還是要手動將其加回去&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;version&quot;: &quot;0.0.0-semantically-released&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 travis.yml 裡面設定要通過 test 才能 release 新版本&lt;/p&gt;
&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;script:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;  -&lt;/span&gt; npm run test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Conventional commit&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Automatically Releasing with TravisCI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Automatically running tests before commits with ghooks&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Goal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 commit 之前先跑測試&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 push 前可以先 bundle&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;commitizen和 ghooks的 config 推薦寫法，影片中的樣式已經舊了&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&quot;config&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;commitizen&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;path&quot;: &quot;node_modules/cz-conventional-changelog/&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;ghooks&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;pre-commit&quot;: &quot;npm run test:single&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;測試覆蓋率&quot;&gt;&lt;a href=&quot;#測試覆蓋率&quot; class=&quot;headerlink&quot; title=&quot;測試覆蓋率&quot;&gt;&lt;/a&gt;測試覆蓋率&lt;/h1&gt;&lt;p&gt;使用 istanbul&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;test:single&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;istanbul cover -x *.test.js _mocha -- -R $(find test -name *.test.js)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-x&lt;/code&gt;是因為我們不需要去測試測試用的js&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;_mocha&lt;/code&gt; 則是為搭配&lt;code&gt;istanbul&lt;/code&gt;所使用的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;運用 npm 上的套件來做個簡單的 CI，&lt;/p&gt;
&lt;p&gt;對自己用的小工具庫或 side project 而言，&lt;/p&gt;
&lt;p&gt;都是很爽的事情。&lt;/p&gt;
    
    </summary>
    
    
      <category term="auto-realease JavaScript CI" scheme="http://abalone0204.github.com/tags/auto-realease-JavaScript-CI/"/>
    
  </entry>
  
</feed>
